"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./node_modules/ethers/lib/utils.js":
/*!******************************************!*\
  !*** ./node_modules/ethers/lib/utils.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;\nexports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.parseBytes32String = void 0;\nvar abi_1 = __webpack_require__(/*! @ethersproject/abi */ \"./node_modules/@ethersproject/abi/lib.esm/index.js\");\nObject.defineProperty(exports, \"AbiCoder\", ({ enumerable: true, get: function () { return abi_1.AbiCoder; } }));\nObject.defineProperty(exports, \"checkResultErrors\", ({ enumerable: true, get: function () { return abi_1.checkResultErrors; } }));\nObject.defineProperty(exports, \"ConstructorFragment\", ({ enumerable: true, get: function () { return abi_1.ConstructorFragment; } }));\nObject.defineProperty(exports, \"defaultAbiCoder\", ({ enumerable: true, get: function () { return abi_1.defaultAbiCoder; } }));\nObject.defineProperty(exports, \"ErrorFragment\", ({ enumerable: true, get: function () { return abi_1.ErrorFragment; } }));\nObject.defineProperty(exports, \"EventFragment\", ({ enumerable: true, get: function () { return abi_1.EventFragment; } }));\nObject.defineProperty(exports, \"FormatTypes\", ({ enumerable: true, get: function () { return abi_1.FormatTypes; } }));\nObject.defineProperty(exports, \"Fragment\", ({ enumerable: true, get: function () { return abi_1.Fragment; } }));\nObject.defineProperty(exports, \"FunctionFragment\", ({ enumerable: true, get: function () { return abi_1.FunctionFragment; } }));\nObject.defineProperty(exports, \"Indexed\", ({ enumerable: true, get: function () { return abi_1.Indexed; } }));\nObject.defineProperty(exports, \"Interface\", ({ enumerable: true, get: function () { return abi_1.Interface; } }));\nObject.defineProperty(exports, \"LogDescription\", ({ enumerable: true, get: function () { return abi_1.LogDescription; } }));\nObject.defineProperty(exports, \"ParamType\", ({ enumerable: true, get: function () { return abi_1.ParamType; } }));\nObject.defineProperty(exports, \"TransactionDescription\", ({ enumerable: true, get: function () { return abi_1.TransactionDescription; } }));\nvar address_1 = __webpack_require__(/*! @ethersproject/address */ \"./node_modules/@ethersproject/address/lib.esm/index.js\");\nObject.defineProperty(exports, \"getAddress\", ({ enumerable: true, get: function () { return address_1.getAddress; } }));\nObject.defineProperty(exports, \"getCreate2Address\", ({ enumerable: true, get: function () { return address_1.getCreate2Address; } }));\nObject.defineProperty(exports, \"getContractAddress\", ({ enumerable: true, get: function () { return address_1.getContractAddress; } }));\nObject.defineProperty(exports, \"getIcapAddress\", ({ enumerable: true, get: function () { return address_1.getIcapAddress; } }));\nObject.defineProperty(exports, \"isAddress\", ({ enumerable: true, get: function () { return address_1.isAddress; } }));\nvar base64 = __importStar(__webpack_require__(/*! @ethersproject/base64 */ \"./node_modules/@ethersproject/base64/lib.esm/index.js\"));\nexports.base64 = base64;\nvar basex_1 = __webpack_require__(/*! @ethersproject/basex */ \"./node_modules/@ethersproject/basex/lib.esm/index.js\");\nObject.defineProperty(exports, \"base58\", ({ enumerable: true, get: function () { return basex_1.Base58; } }));\nvar bytes_1 = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\nObject.defineProperty(exports, \"arrayify\", ({ enumerable: true, get: function () { return bytes_1.arrayify; } }));\nObject.defineProperty(exports, \"concat\", ({ enumerable: true, get: function () { return bytes_1.concat; } }));\nObject.defineProperty(exports, \"hexConcat\", ({ enumerable: true, get: function () { return bytes_1.hexConcat; } }));\nObject.defineProperty(exports, \"hexDataSlice\", ({ enumerable: true, get: function () { return bytes_1.hexDataSlice; } }));\nObject.defineProperty(exports, \"hexDataLength\", ({ enumerable: true, get: function () { return bytes_1.hexDataLength; } }));\nObject.defineProperty(exports, \"hexlify\", ({ enumerable: true, get: function () { return bytes_1.hexlify; } }));\nObject.defineProperty(exports, \"hexStripZeros\", ({ enumerable: true, get: function () { return bytes_1.hexStripZeros; } }));\nObject.defineProperty(exports, \"hexValue\", ({ enumerable: true, get: function () { return bytes_1.hexValue; } }));\nObject.defineProperty(exports, \"hexZeroPad\", ({ enumerable: true, get: function () { return bytes_1.hexZeroPad; } }));\nObject.defineProperty(exports, \"isBytes\", ({ enumerable: true, get: function () { return bytes_1.isBytes; } }));\nObject.defineProperty(exports, \"isBytesLike\", ({ enumerable: true, get: function () { return bytes_1.isBytesLike; } }));\nObject.defineProperty(exports, \"isHexString\", ({ enumerable: true, get: function () { return bytes_1.isHexString; } }));\nObject.defineProperty(exports, \"joinSignature\", ({ enumerable: true, get: function () { return bytes_1.joinSignature; } }));\nObject.defineProperty(exports, \"zeroPad\", ({ enumerable: true, get: function () { return bytes_1.zeroPad; } }));\nObject.defineProperty(exports, \"splitSignature\", ({ enumerable: true, get: function () { return bytes_1.splitSignature; } }));\nObject.defineProperty(exports, \"stripZeros\", ({ enumerable: true, get: function () { return bytes_1.stripZeros; } }));\nvar hash_1 = __webpack_require__(/*! @ethersproject/hash */ \"./node_modules/@ethersproject/hash/lib.esm/index.js\");\nObject.defineProperty(exports, \"_TypedDataEncoder\", ({ enumerable: true, get: function () { return hash_1._TypedDataEncoder; } }));\nObject.defineProperty(exports, \"hashMessage\", ({ enumerable: true, get: function () { return hash_1.hashMessage; } }));\nObject.defineProperty(exports, \"id\", ({ enumerable: true, get: function () { return hash_1.id; } }));\nObject.defineProperty(exports, \"isValidName\", ({ enumerable: true, get: function () { return hash_1.isValidName; } }));\nObject.defineProperty(exports, \"namehash\", ({ enumerable: true, get: function () { return hash_1.namehash; } }));\nvar hdnode_1 = __webpack_require__(/*! @ethersproject/hdnode */ \"./node_modules/@ethersproject/hdnode/lib.esm/index.js\");\nObject.defineProperty(exports, \"defaultPath\", ({ enumerable: true, get: function () { return hdnode_1.defaultPath; } }));\nObject.defineProperty(exports, \"entropyToMnemonic\", ({ enumerable: true, get: function () { return hdnode_1.entropyToMnemonic; } }));\nObject.defineProperty(exports, \"getAccountPath\", ({ enumerable: true, get: function () { return hdnode_1.getAccountPath; } }));\nObject.defineProperty(exports, \"HDNode\", ({ enumerable: true, get: function () { return hdnode_1.HDNode; } }));\nObject.defineProperty(exports, \"isValidMnemonic\", ({ enumerable: true, get: function () { return hdnode_1.isValidMnemonic; } }));\nObject.defineProperty(exports, \"mnemonicToEntropy\", ({ enumerable: true, get: function () { return hdnode_1.mnemonicToEntropy; } }));\nObject.defineProperty(exports, \"mnemonicToSeed\", ({ enumerable: true, get: function () { return hdnode_1.mnemonicToSeed; } }));\nvar json_wallets_1 = __webpack_require__(/*! @ethersproject/json-wallets */ \"./node_modules/@ethersproject/json-wallets/lib.esm/index.js\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", ({ enumerable: true, get: function () { return json_wallets_1.getJsonWalletAddress; } }));\nvar keccak256_1 = __webpack_require__(/*! @ethersproject/keccak256 */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\nObject.defineProperty(exports, \"keccak256\", ({ enumerable: true, get: function () { return keccak256_1.keccak256; } }));\nvar logger_1 = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\nvar sha2_1 = __webpack_require__(/*! @ethersproject/sha2 */ \"./node_modules/@ethersproject/sha2/lib.esm/index.js\");\nObject.defineProperty(exports, \"computeHmac\", ({ enumerable: true, get: function () { return sha2_1.computeHmac; } }));\nObject.defineProperty(exports, \"ripemd160\", ({ enumerable: true, get: function () { return sha2_1.ripemd160; } }));\nObject.defineProperty(exports, \"sha256\", ({ enumerable: true, get: function () { return sha2_1.sha256; } }));\nObject.defineProperty(exports, \"sha512\", ({ enumerable: true, get: function () { return sha2_1.sha512; } }));\nvar solidity_1 = __webpack_require__(/*! @ethersproject/solidity */ \"./node_modules/@ethersproject/solidity/lib.esm/index.js\");\nObject.defineProperty(exports, \"solidityKeccak256\", ({ enumerable: true, get: function () { return solidity_1.keccak256; } }));\nObject.defineProperty(exports, \"solidityPack\", ({ enumerable: true, get: function () { return solidity_1.pack; } }));\nObject.defineProperty(exports, \"soliditySha256\", ({ enumerable: true, get: function () { return solidity_1.sha256; } }));\nvar random_1 = __webpack_require__(/*! @ethersproject/random */ \"./node_modules/@ethersproject/random/lib.esm/index.js\");\nObject.defineProperty(exports, \"randomBytes\", ({ enumerable: true, get: function () { return random_1.randomBytes; } }));\nObject.defineProperty(exports, \"shuffled\", ({ enumerable: true, get: function () { return random_1.shuffled; } }));\nvar properties_1 = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\nObject.defineProperty(exports, \"checkProperties\", ({ enumerable: true, get: function () { return properties_1.checkProperties; } }));\nObject.defineProperty(exports, \"deepCopy\", ({ enumerable: true, get: function () { return properties_1.deepCopy; } }));\nObject.defineProperty(exports, \"defineReadOnly\", ({ enumerable: true, get: function () { return properties_1.defineReadOnly; } }));\nObject.defineProperty(exports, \"getStatic\", ({ enumerable: true, get: function () { return properties_1.getStatic; } }));\nObject.defineProperty(exports, \"resolveProperties\", ({ enumerable: true, get: function () { return properties_1.resolveProperties; } }));\nObject.defineProperty(exports, \"shallowCopy\", ({ enumerable: true, get: function () { return properties_1.shallowCopy; } }));\nvar RLP = __importStar(__webpack_require__(/*! @ethersproject/rlp */ \"./node_modules/@ethersproject/rlp/lib.esm/index.js\"));\nexports.RLP = RLP;\nvar signing_key_1 = __webpack_require__(/*! @ethersproject/signing-key */ \"./node_modules/@ethersproject/signing-key/lib.esm/index.js\");\nObject.defineProperty(exports, \"computePublicKey\", ({ enumerable: true, get: function () { return signing_key_1.computePublicKey; } }));\nObject.defineProperty(exports, \"recoverPublicKey\", ({ enumerable: true, get: function () { return signing_key_1.recoverPublicKey; } }));\nObject.defineProperty(exports, \"SigningKey\", ({ enumerable: true, get: function () { return signing_key_1.SigningKey; } }));\nvar strings_1 = __webpack_require__(/*! @ethersproject/strings */ \"./node_modules/@ethersproject/strings/lib.esm/index.js\");\nObject.defineProperty(exports, \"formatBytes32String\", ({ enumerable: true, get: function () { return strings_1.formatBytes32String; } }));\nObject.defineProperty(exports, \"nameprep\", ({ enumerable: true, get: function () { return strings_1.nameprep; } }));\nObject.defineProperty(exports, \"parseBytes32String\", ({ enumerable: true, get: function () { return strings_1.parseBytes32String; } }));\nObject.defineProperty(exports, \"_toEscapedUtf8String\", ({ enumerable: true, get: function () { return strings_1._toEscapedUtf8String; } }));\nObject.defineProperty(exports, \"toUtf8Bytes\", ({ enumerable: true, get: function () { return strings_1.toUtf8Bytes; } }));\nObject.defineProperty(exports, \"toUtf8CodePoints\", ({ enumerable: true, get: function () { return strings_1.toUtf8CodePoints; } }));\nObject.defineProperty(exports, \"toUtf8String\", ({ enumerable: true, get: function () { return strings_1.toUtf8String; } }));\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", ({ enumerable: true, get: function () { return strings_1.Utf8ErrorFuncs; } }));\nvar transactions_1 = __webpack_require__(/*! @ethersproject/transactions */ \"./node_modules/@ethersproject/transactions/lib.esm/index.js\");\nObject.defineProperty(exports, \"accessListify\", ({ enumerable: true, get: function () { return transactions_1.accessListify; } }));\nObject.defineProperty(exports, \"computeAddress\", ({ enumerable: true, get: function () { return transactions_1.computeAddress; } }));\nObject.defineProperty(exports, \"parseTransaction\", ({ enumerable: true, get: function () { return transactions_1.parse; } }));\nObject.defineProperty(exports, \"recoverAddress\", ({ enumerable: true, get: function () { return transactions_1.recoverAddress; } }));\nObject.defineProperty(exports, \"serializeTransaction\", ({ enumerable: true, get: function () { return transactions_1.serialize; } }));\nObject.defineProperty(exports, \"TransactionTypes\", ({ enumerable: true, get: function () { return transactions_1.TransactionTypes; } }));\nvar units_1 = __webpack_require__(/*! @ethersproject/units */ \"./node_modules/@ethersproject/units/lib.esm/index.js\");\nObject.defineProperty(exports, \"commify\", ({ enumerable: true, get: function () { return units_1.commify; } }));\nObject.defineProperty(exports, \"formatEther\", ({ enumerable: true, get: function () { return units_1.formatEther; } }));\nObject.defineProperty(exports, \"parseEther\", ({ enumerable: true, get: function () { return units_1.parseEther; } }));\nObject.defineProperty(exports, \"formatUnits\", ({ enumerable: true, get: function () { return units_1.formatUnits; } }));\nObject.defineProperty(exports, \"parseUnits\", ({ enumerable: true, get: function () { return units_1.parseUnits; } }));\nvar wallet_1 = __webpack_require__(/*! @ethersproject/wallet */ \"./node_modules/@ethersproject/wallet/lib.esm/index.js\");\nObject.defineProperty(exports, \"verifyMessage\", ({ enumerable: true, get: function () { return wallet_1.verifyMessage; } }));\nObject.defineProperty(exports, \"verifyTypedData\", ({ enumerable: true, get: function () { return wallet_1.verifyTypedData; } }));\nvar web_1 = __webpack_require__(/*! @ethersproject/web */ \"./node_modules/@ethersproject/web/lib.esm/index.js\");\nObject.defineProperty(exports, \"_fetchData\", ({ enumerable: true, get: function () { return web_1._fetchData; } }));\nObject.defineProperty(exports, \"fetchJson\", ({ enumerable: true, get: function () { return web_1.fetchJson; } }));\nObject.defineProperty(exports, \"poll\", ({ enumerable: true, get: function () { return web_1.poll; } }));\n////////////////////////\n// Enums\nvar sha2_2 = __webpack_require__(/*! @ethersproject/sha2 */ \"./node_modules/@ethersproject/sha2/lib.esm/index.js\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", ({ enumerable: true, get: function () { return sha2_2.SupportedAlgorithm; } }));\nvar strings_2 = __webpack_require__(/*! @ethersproject/strings */ \"./node_modules/@ethersproject/strings/lib.esm/index.js\");\nObject.defineProperty(exports, \"UnicodeNormalizationForm\", ({ enumerable: true, get: function () { return strings_2.UnicodeNormalizationForm; } }));\nObject.defineProperty(exports, \"Utf8ErrorReason\", ({ enumerable: true, get: function () { return strings_2.Utf8ErrorReason; } }));\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/lib/utils.js\n");

/***/ }),

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ (function(module) {

eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/eventemitter3/index.js\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-query */ \"./node_modules/react-query/es/index.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/react-hot-toast.esm.js\");\n/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../theme */ \"./theme.ts\");\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! wagmi */ \"./node_modules/wagmi/dist/wagmi.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\n\n\n\nvar _this = undefined;\n// Provider that will be used when no wallet is connected (aka no signer)\nvar provider = ethers__WEBPACK_IMPORTED_MODULE_4__.providers.getDefaultProvider(\"http://localhost:8545\");\n// Create a react-query client\nvar queryClient = new react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClient({\n    defaultOptions: {\n        queries: {\n            refetchOnWindowFocus: false\n        }\n    },\n    queryCache: new react_query__WEBPACK_IMPORTED_MODULE_2__.QueryCache({\n        onError: function() {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_5__.toast.error(\"Network Error: Ensure Metamask is connected to the same network that your contract is deployed to.\");\n        }\n    })\n});\nvar App = function() {\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(wagmi__WEBPACK_IMPORTED_MODULE_6__.Provider, {\n        autoConnect: true,\n        provider: provider,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.ChakraProvider, {\n            theme: _theme__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClientProvider, {\n                client: queryClient,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Box, {\n                    p: 8,\n                    maxW: \"600px\",\n                    minW: \"320px\",\n                    m: \"0 auto\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Heading, {\n                            children: \"Oops, no comments yet!\"\n                        }, void 0, false, {\n                            fileName: \"/mnt/c/pr0/comments-with-polygon/pages/index.tsx\",\n                            lineNumber: 35,\n                            columnNumber: 13\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_5__.Toaster, {\n                            position: \"bottom-right\"\n                        }, void 0, false, {\n                            fileName: \"/mnt/c/pr0/comments-with-polygon/pages/index.tsx\",\n                            lineNumber: 36,\n                            columnNumber: 13\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/mnt/c/pr0/comments-with-polygon/pages/index.tsx\",\n                    lineNumber: 34,\n                    columnNumber: 11\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/mnt/c/pr0/comments-with-polygon/pages/index.tsx\",\n                lineNumber: 33,\n                columnNumber: 9\n            }, _this)\n        }, void 0, false, {\n            fileName: \"/mnt/c/pr0/comments-with-polygon/pages/index.tsx\",\n            lineNumber: 32,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/mnt/c/pr0/comments-with-polygon/pages/index.tsx\",\n        lineNumber: 31,\n        columnNumber: 5\n    }, _this));\n};\n_c = App;\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            var currentExports = module.__proto__.exports;\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUM4QjtBQUM0QztBQUNYO0FBQ2Y7QUFDcEI7QUFDcUI7QUFDZjs7QUFFbEMsRUFBeUU7QUFDekUsR0FBSyxDQUFDYSxRQUFRLEdBQUdELGdFQUE0QixDQUFDLENBQXVCO0FBRXJFLEVBQThCO0FBQzlCLEdBQUssQ0FBQ0csV0FBVyxHQUFHLEdBQUcsQ0FBQ2Qsb0RBQVcsQ0FBQyxDQUFDO0lBQ25DZSxjQUFjLEVBQUUsQ0FBQztRQUNmQyxPQUFPLEVBQUUsQ0FBQztZQUNSQyxvQkFBb0IsRUFBRSxLQUFLO1FBQzdCLENBQUM7SUFDSCxDQUFDO0lBQ0RDLFVBQVUsRUFBRSxHQUFHLENBQUNoQixtREFBVSxDQUFDLENBQUM7UUFDMUJpQixPQUFPLEVBQUUsUUFDYixHQURtQixDQUFDO1lBQ2RaLHdEQUFXLENBQ1QsQ0FBb0c7UUFFeEcsQ0FBQztJQUNILENBQUM7QUFDSCxDQUFDO0FBRUQsR0FBSyxDQUFDYyxHQUFHLEdBQWEsUUFDdEIsR0FENEIsQ0FBQztJQUMzQixNQUFNLDZFQUNIWCwyQ0FBYTtRQUFDWSxXQUFXO1FBQUNWLFFBQVEsRUFBRUEsUUFBUTs4RkFDMUNULDREQUFjO1lBQUNLLEtBQUssRUFBRUEsOENBQUs7a0dBQ3pCUCw0REFBbUI7Z0JBQUNzQixNQUFNLEVBQUVULFdBQVc7c0dBQ3JDVixpREFBRztvQkFBQ29CLENBQUMsRUFBRSxDQUFDO29CQUFFQyxJQUFJLEVBQUMsQ0FBTztvQkFBQ0MsSUFBSSxFQUFDLENBQU87b0JBQUNDLENBQUMsRUFBQyxDQUFROztvR0FDNUN0QixxREFBTztzQ0FBQyxDQUFzQjs7Ozs7O29HQUM5QkMsb0RBQU87NEJBQUNzQixRQUFRLEVBQUMsQ0FBYzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTTVDLENBQUM7S0FiS1AsR0FBRztBQWVULCtEQUFlQSxHQUFHLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvaW5kZXgudHN4PzA3ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOZXh0UGFnZSB9IGZyb20gXCJuZXh0XCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50LCBRdWVyeUNsaWVudFByb3ZpZGVyLCBRdWVyeUNhY2hlIH0gZnJvbSBcInJlYWN0LXF1ZXJ5XCI7XG5pbXBvcnQgeyBDaGFrcmFQcm92aWRlciwgQm94LCBIZWFkaW5nIH0gZnJvbSBcIkBjaGFrcmEtdWkvcmVhY3RcIjtcbmltcG9ydCB7IFRvYXN0ZXIsIHRvYXN0IH0gZnJvbSBcInJlYWN0LWhvdC10b2FzdFwiO1xuaW1wb3J0IHRoZW1lIGZyb20gXCIuLi90aGVtZVwiO1xuaW1wb3J0IHsgUHJvdmlkZXIgYXMgV2FnbWlQcm92aWRlciB9IGZyb20gXCJ3YWdtaVwiO1xuaW1wb3J0IHsgcHJvdmlkZXJzIH0gZnJvbSBcImV0aGVyc1wiO1xuXG4vLyBQcm92aWRlciB0aGF0IHdpbGwgYmUgdXNlZCB3aGVuIG5vIHdhbGxldCBpcyBjb25uZWN0ZWQgKGFrYSBubyBzaWduZXIpXG5jb25zdCBwcm92aWRlciA9IHByb3ZpZGVycy5nZXREZWZhdWx0UHJvdmlkZXIoXCJodHRwOi8vbG9jYWxob3N0Ojg1NDVcIik7XG5cbi8vIENyZWF0ZSBhIHJlYWN0LXF1ZXJ5IGNsaWVudFxuY29uc3QgcXVlcnlDbGllbnQgPSBuZXcgUXVlcnlDbGllbnQoe1xuICBkZWZhdWx0T3B0aW9uczoge1xuICAgIHF1ZXJpZXM6IHtcbiAgICAgIHJlZmV0Y2hPbldpbmRvd0ZvY3VzOiBmYWxzZSxcbiAgICB9LFxuICB9LFxuICBxdWVyeUNhY2hlOiBuZXcgUXVlcnlDYWNoZSh7XG4gICAgb25FcnJvcjogKCkgPT4ge1xuICAgICAgdG9hc3QuZXJyb3IoXG4gICAgICAgIFwiTmV0d29yayBFcnJvcjogRW5zdXJlIE1ldGFtYXNrIGlzIGNvbm5lY3RlZCB0byB0aGUgc2FtZSBuZXR3b3JrIHRoYXQgeW91ciBjb250cmFjdCBpcyBkZXBsb3llZCB0by5cIlxuICAgICAgKTtcbiAgICB9LFxuICB9KSxcbn0pO1xuXG5jb25zdCBBcHA6IE5leHRQYWdlID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxXYWdtaVByb3ZpZGVyIGF1dG9Db25uZWN0IHByb3ZpZGVyPXtwcm92aWRlcn0+XG4gICAgICA8Q2hha3JhUHJvdmlkZXIgdGhlbWU9e3RoZW1lfT5cbiAgICAgICAgPFF1ZXJ5Q2xpZW50UHJvdmlkZXIgY2xpZW50PXtxdWVyeUNsaWVudH0+XG4gICAgICAgICAgPEJveCBwPXs4fSBtYXhXPVwiNjAwcHhcIiBtaW5XPVwiMzIwcHhcIiBtPVwiMCBhdXRvXCI+XG4gICAgICAgICAgICA8SGVhZGluZz5Pb3BzLCBubyBjb21tZW50cyB5ZXQhPC9IZWFkaW5nPlxuICAgICAgICAgICAgPFRvYXN0ZXIgcG9zaXRpb249XCJib3R0b20tcmlnaHRcIiAvPlxuICAgICAgICAgIDwvQm94PlxuICAgICAgICA8L1F1ZXJ5Q2xpZW50UHJvdmlkZXI+XG4gICAgICA8L0NoYWtyYVByb3ZpZGVyPlxuICAgIDwvV2FnbWlQcm92aWRlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlF1ZXJ5Q2xpZW50IiwiUXVlcnlDbGllbnRQcm92aWRlciIsIlF1ZXJ5Q2FjaGUiLCJDaGFrcmFQcm92aWRlciIsIkJveCIsIkhlYWRpbmciLCJUb2FzdGVyIiwidG9hc3QiLCJ0aGVtZSIsIlByb3ZpZGVyIiwiV2FnbWlQcm92aWRlciIsInByb3ZpZGVycyIsInByb3ZpZGVyIiwiZ2V0RGVmYXVsdFByb3ZpZGVyIiwicXVlcnlDbGllbnQiLCJkZWZhdWx0T3B0aW9ucyIsInF1ZXJpZXMiLCJyZWZldGNoT25XaW5kb3dGb2N1cyIsInF1ZXJ5Q2FjaGUiLCJvbkVycm9yIiwiZXJyb3IiLCJBcHAiLCJhdXRvQ29ubmVjdCIsImNsaWVudCIsInAiLCJtYXhXIiwibWluVyIsIm0iLCJwb3NpdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "./node_modules/wagmi-private/dist/base-3b1382b0.esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/wagmi-private/dist/base-3b1382b0.esm.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"A\": function() { return /* binding */ AddChainError; },\n/* harmony export */   \"C\": function() { return /* binding */ Connector; },\n/* harmony export */   \"S\": function() { return /* binding */ SwitchChainError; },\n/* harmony export */   \"U\": function() { return /* binding */ UserRejectedRequestError; },\n/* harmony export */   \"_\": function() { return /* binding */ _defineProperty; },\n/* harmony export */   \"a\": function() { return /* binding */ _classPrivateFieldInitSpec; },\n/* harmony export */   \"b\": function() { return /* binding */ _asyncToGenerator; },\n/* harmony export */   \"c\": function() { return /* binding */ ConnectorNotFoundError; },\n/* harmony export */   \"d\": function() { return /* binding */ _classPrivateFieldSet; },\n/* harmony export */   \"e\": function() { return /* binding */ _classPrivateFieldGet; },\n/* harmony export */   \"f\": function() { return /* binding */ allChains; },\n/* harmony export */   \"g\": function() { return /* binding */ ChainNotConfiguredError; },\n/* harmony export */   \"h\": function() { return /* binding */ chain; },\n/* harmony export */   \"i\": function() { return /* binding */ defaultChains; },\n/* harmony export */   \"j\": function() { return /* binding */ defaultL2Chains; },\n/* harmony export */   \"k\": function() { return /* binding */ developmentChains; },\n/* harmony export */   \"l\": function() { return /* binding */ ConnectorAlreadyConnectedError; },\n/* harmony export */   \"m\": function() { return /* binding */ _checkPrivateRedeclaration; },\n/* harmony export */   \"n\": function() { return /* binding */ normalizeChainId; }\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\n\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n\nvar chain = {\n  mainnet: {\n    id: 1,\n    name: 'Mainnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://mainnet.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://etherscan.io'\n    }]\n  },\n  ropsten: {\n    id: 3,\n    name: 'Ropsten',\n    nativeCurrency: {\n      name: 'Ropsten Ether',\n      symbol: 'ropETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://ropsten.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://ropsten.etherscan.io'\n    }],\n    testnet: true\n  },\n  rinkeby: {\n    id: 4,\n    name: 'Rinkeby',\n    nativeCurrency: {\n      name: 'Rinkeby Ether',\n      symbol: 'rETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://rinkeby.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://rinkeby.etherscan.io'\n    }],\n    testnet: true\n  },\n  goerli: {\n    id: 5,\n    name: 'Goerli',\n    nativeCurrency: {\n      name: 'Goerli Ether',\n      symbol: 'gETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://goerli.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io'\n    }],\n    testnet: true\n  },\n  kovan: {\n    id: 42,\n    name: 'Kovan',\n    nativeCurrency: {\n      name: 'Kovan Ether',\n      symbol: 'kETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://kovan.infura.io/v3'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://kovan.etherscan.io'\n    }],\n    testnet: true\n  },\n  optimisticEthereum: {\n    id: 10,\n    name: 'Optimistic Ethereum',\n    nativeCurrency: {\n      name: 'Optimistic Ether',\n      symbol: 'OETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://mainnet.optimism.io'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://optimistic.etherscan.io'\n    }]\n  },\n  optimisticKovan: {\n    id: 69,\n    name: 'Optimistic Kovan',\n    nativeCurrency: {\n      name: 'Kovan Ether',\n      symbol: 'KOR',\n      decimals: 18\n    },\n    rpcUrls: ['https://kovan.optimism.io'],\n    blockExplorers: [{\n      name: 'Etherscan',\n      url: 'https://optimistic.etherscan.io'\n    }],\n    testnet: true\n  },\n  polygonMainnet: {\n    id: 137,\n    name: 'Polygon Mainnet',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://polygon-rpc.com', 'https://rpc-mainnet.matic.network', 'https://matic-mainnet.chainstacklabs.com', 'https://rpc-mainnet.maticvigil.com', 'https://rpc-mainnet.matic.quiknode.pro', 'https://matic-mainnet-full-rpc.bwarelabs.com'],\n    blockExplorers: [{\n      name: 'Polygonscan',\n      url: 'https://polygonscan.com'\n    }]\n  },\n  polygonTestnetMumbai: {\n    id: 80001,\n    name: 'Polygon Testnet Mumbai',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    rpcUrls: ['https://matic-mumbai.chainstacklabs.com', 'https://rpc-mumbai.maticvigil.com', 'https://matic-testnet-archive-rpc.bwarelabs.com'],\n    blockExplorers: [{\n      name: 'Polygonscan',\n      url: 'https://mumbai.polygonscan.com'\n    }],\n    testnet: true\n  },\n  arbitrumOne: {\n    id: 42161,\n    name: 'Arbitrum One',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'AETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    blockExplorers: [{\n      name: 'Arbiscan',\n      url: 'https://arbiscan.io'\n    }, {\n      name: 'Arbitrum Explorer',\n      url: 'https://explorer.arbitrum.io'\n    }]\n  },\n  arbitrumRinkeby: {\n    id: 421611,\n    name: 'Rinkeby Arbitrum',\n    nativeCurrency: {\n      name: 'Rinkeby ArbEther',\n      symbol: 'rinkArbETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://rinkeby.arbitrum.io/rpc'],\n    blockExplorers: [{\n      name: 'Arbitrum Explorer',\n      url: 'https://rinkeby-explorer.arbitrum.io'\n    }],\n    testnet: true\n  },\n  avalanche: {\n    id: 43114,\n    name: 'Avalanche',\n    nativeCurrency: {\n      name: 'AVAX',\n      symbol: 'AVAX',\n      decimals: 18\n    },\n    rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n    blockExplorers: [{\n      name: 'SnowTrace',\n      url: 'https://snowtrace.io/'\n    }],\n    testnet: false\n  },\n  avalancheFuji: {\n    id: 43113,\n    name: 'Avalanche FUJI',\n    nativeCurrency: {\n      name: 'AVAX',\n      symbol: 'AVAX',\n      decimals: 18\n    },\n    rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    blockExplorers: [{\n      name: 'SnowTrace',\n      url: 'https://testnet.snowtrace.io/'\n    }],\n    testnet: true\n  },\n  localhost: {\n    id: 1337,\n    name: 'Localhost',\n    rpcUrls: ['https://127.0.0.1:8545']\n  },\n  hardhat: {\n    id: 31337,\n    name: 'hardhat',\n    rpcUrls: ['http://127.0.0.1:8545']\n  }\n};\nvar allChains = Object.values(chain);\nvar defaultChains = [chain.mainnet, chain.ropsten, chain.rinkeby, chain.goerli, chain.kovan];\nvar defaultL2Chains = [chain.optimisticEthereum, chain.optimisticKovan, chain.polygonMainnet, chain.polygonTestnetMumbai, chain.arbitrumOne, chain.arbitrumRinkeby];\nvar developmentChains = [chain.localhost, chain.hardhat];\n\nvar normalizeChainId = chainId => {\n  if (typeof chainId === 'string') return Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);\n  return chainId;\n};\n\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'AddChainError');\n\n    _defineProperty(this, \"message\", 'Error adding chain');\n  }\n\n}\nclass ChainNotConfiguredError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ChainNotConfigured');\n\n    _defineProperty(this, \"message\", 'Chain not configured');\n  }\n\n}\nclass ConnectorAlreadyConnectedError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ConnectorAlreadyConnectedError');\n\n    _defineProperty(this, \"message\", 'Connector already connected');\n  }\n\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ConnectorNotFoundError');\n\n    _defineProperty(this, \"message\", 'Connector not found');\n  }\n\n}\nclass SwitchChainError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'SwitchChainError');\n\n    _defineProperty(this, \"message\", 'Error switching chain');\n  }\n\n}\nclass UserRejectedRequestError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'UserRejectedRequestError');\n\n    _defineProperty(this, \"message\", 'User rejected request');\n  }\n\n}\n\nclass Connector extends (eventemitter3__WEBPACK_IMPORTED_MODULE_0___default()) {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n  constructor(_ref) {\n    var {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"chains\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"ready\", void 0);\n\n    this.chains = chains;\n    this.options = options;\n  }\n\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.id === chainId);\n  }\n\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wagmi-private/dist/base-3b1382b0.esm.js\n");

/***/ }),

/***/ "./node_modules/wagmi-private/dist/wagmi-private.esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/wagmi-private/dist/wagmi-private.esm.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AddChainError\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.A; },\n/* harmony export */   \"ChainNotConfiguredError\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.g; },\n/* harmony export */   \"Connector\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.C; },\n/* harmony export */   \"ConnectorAlreadyConnectedError\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.l; },\n/* harmony export */   \"ConnectorNotFoundError\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.c; },\n/* harmony export */   \"SwitchChainError\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.S; },\n/* harmony export */   \"UserRejectedRequestError\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.U; },\n/* harmony export */   \"allChains\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.f; },\n/* harmony export */   \"chain\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.h; },\n/* harmony export */   \"defaultChains\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.i; },\n/* harmony export */   \"defaultL2Chains\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.j; },\n/* harmony export */   \"developmentChains\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.k; },\n/* harmony export */   \"normalizeChainId\": function() { return /* reexport safe */ _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.n; },\n/* harmony export */   \"InjectedConnector\": function() { return /* binding */ InjectedConnector; },\n/* harmony export */   \"erc1155ABI\": function() { return /* binding */ erc1155ABI; },\n/* harmony export */   \"erc20ABI\": function() { return /* binding */ erc20ABI; },\n/* harmony export */   \"erc721ABI\": function() { return /* binding */ erc721ABI; },\n/* harmony export */   \"units\": function() { return /* binding */ units; }\n/* harmony export */ });\n/* harmony import */ var _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-3b1382b0.esm.js */ \"./node_modules/wagmi-private/dist/base-3b1382b0.esm.js\");\n/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/providers */ \"./node_modules/@ethersproject/providers/lib.esm/index.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers/lib/utils */ \"./node_modules/ethers/lib/utils.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar erc1155ABI = [{\n  constant: true,\n  inputs: [{\n    internalType: 'address',\n    name: '_owner',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: '_id',\n    type: 'uint256'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'uint256',\n    name: '_id',\n    type: 'uint256'\n  }],\n  name: 'uri',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}];\n\nvar erc20ABI = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_spender',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'approve',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'totalSupply',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_from',\n    type: 'address'\n  }, {\n    name: '_to',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'transferFrom',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'decimals',\n  outputs: [{\n    name: '',\n    type: 'uint8'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: 'balance',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_to',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }, {\n    name: '_spender',\n    type: 'address'\n  }],\n  name: 'allowance',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  payable: true,\n  stateMutability: 'payable',\n  type: 'fallback'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Approval',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Transfer',\n  type: 'event'\n}];\n\nvar erc721ABI = [{\n  inputs: [{\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  name: 'ownerOf',\n  outputs: [{\n    internalType: 'address',\n    name: '',\n    type: 'address'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  name: 'tokenURI',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}];\n\n// https://github.com/ethers-io/ethers.js/blob/master/packages/units/src.ts/index.ts#L10-L18\nvar units = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\nvar getInjectedName = ethereum => {\n  if (!ethereum) return 'Injected';\n  if (ethereum.isMetaMask) return 'MetaMask';\n  if (ethereum.isCoinbaseWallet) return 'Coinbase Wallet';\n  if (ethereum.isFrame) return 'Frame';\n  if (ethereum.isTally) return 'Tally';\n  return 'Injected';\n};\n\nvar shimKey = 'wagmi.shimDisconnect';\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nclass InjectedConnector extends _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.C {\n  constructor(config) {\n    super(_objectSpread2(_objectSpread2({}, config), {}, {\n      options: config === null || config === void 0 ? void 0 : config.options\n    }));\n\n    (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"id\", 'injected');\n\n    (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"name\", void 0);\n\n    (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"ready\", typeof window != 'undefined' && !!window.ethereum);\n\n    (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: (0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__.getAddress)(accounts[0])\n      });\n    });\n\n    (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"onChainChanged\", chainId => {\n      var id = (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.n)(chainId);\n      var unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this, \"onDisconnect\", () => {\n      var _this$options;\n\n      this.emit('disconnect');\n      if ((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.removeItem(shimKey);\n    });\n\n    var name = 'Injected';\n    if (typeof window !== 'undefined') name = getInjectedName(window.ethereum);\n    this.name = name;\n  }\n\n  connect() {\n    var _this = this;\n\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(function* () {\n      try {\n        var _this$options2;\n\n        var provider = _this.getProvider();\n\n        if (!provider) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.c();\n\n        if (provider.on) {\n          provider.on('accountsChanged', _this.onAccountsChanged);\n          provider.on('chainChanged', _this.onChainChanged);\n          provider.on('disconnect', _this.onDisconnect);\n        }\n\n        var account = yield _this.getAccount();\n        var id = yield _this.getChainId();\n\n        var unsupported = _this.isChainUnsupported(id);\n\n        if ((_this$options2 = _this.options) !== null && _this$options2 !== void 0 && _this$options2.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.setItem(shimKey, 'true');\n        return {\n          account,\n          chain: {\n            id,\n            unsupported\n          },\n          provider\n        };\n      } catch (error) {\n        if (error.code === 4001) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.U();\n        throw error;\n      }\n    })();\n  }\n\n  disconnect() {\n    var _this2 = this;\n\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(function* () {\n      var _this2$options;\n\n      var provider = _this2.getProvider();\n\n      if (!(provider !== null && provider !== void 0 && provider.removeListener)) return;\n      provider.removeListener('accountsChanged', _this2.onAccountsChanged);\n      provider.removeListener('chainChanged', _this2.onChainChanged);\n      provider.removeListener('disconnect', _this2.onDisconnect);\n      if ((_this2$options = _this2.options) !== null && _this2$options !== void 0 && _this2$options.shimDisconnect) typeof localStorage !== 'undefined' && localStorage.removeItem(shimKey);\n    })();\n  }\n\n  getAccount() {\n    var _this3 = this;\n\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(function* () {\n      var provider = _this3.getProvider();\n\n      if (!provider) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.c();\n      var accounts = yield provider.request({\n        method: 'eth_requestAccounts'\n      }); // return checksum address\n\n      return (0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__.getAddress)(accounts[0]);\n    })();\n  }\n\n  getChainId() {\n    var _this4 = this;\n\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(function* () {\n      var provider = _this4.getProvider();\n\n      if (!provider) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.c();\n      return yield provider.request({\n        method: 'eth_chainId'\n      }).then(_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.n);\n    })();\n  }\n\n  getProvider() {\n    if (typeof window !== 'undefined' && !!window.ethereum) (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.d)(this, _provider, window.ethereum);\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, _provider);\n  }\n\n  getSigner() {\n    var _this5 = this;\n\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(function* () {\n      var provider = _this5.getProvider();\n\n      var account = yield _this5.getAccount();\n      return new _ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__.Web3Provider(provider).getSigner(account);\n    })();\n  }\n\n  isAuthorized() {\n    var _this6 = this;\n\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(function* () {\n      try {\n        var _this6$options;\n\n        if ((_this6$options = _this6.options) !== null && _this6$options !== void 0 && _this6$options.shimDisconnect && typeof localStorage !== 'undefined' && !localStorage.getItem(shimKey)) return false;\n\n        var provider = _this6.getProvider();\n\n        if (!provider) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.c();\n        var accounts = yield provider.request({\n          method: 'eth_accounts'\n        });\n        var account = accounts[0];\n        return !!account;\n      } catch (_unused) {\n        return false;\n      }\n    })();\n  }\n\n  switchChain(chainId) {\n    var _this7 = this;\n\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(function* () {\n      var provider = _this7.getProvider();\n\n      if (!provider) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.c();\n      var id = (0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__.hexValue)(chainId);\n\n      try {\n        yield provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: id\n          }]\n        });\n        var chains = [..._this7.chains, ..._base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.f];\n        return chains.find(x => x.id === chainId);\n      } catch (error) {\n        // Indicates chain is not added to MetaMask\n        if (error.code === 4902) {\n          try {\n            var _chain$blockExplorers;\n\n            var chain = _this7.chains.find(x => x.id === chainId);\n\n            if (!chain) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.g();\n            yield provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: chain.rpcUrls,\n                blockExplorerUrls: (_chain$blockExplorers = chain.blockExplorers) === null || _chain$blockExplorers === void 0 ? void 0 : _chain$blockExplorers.map(x => x.url)\n              }]\n            });\n          } catch (addError) {\n            throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.A();\n          }\n        } else if (error.code === 4001) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.U();else throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.S();\n      }\n    })();\n  }\n\n  watchAsset(_ref) {\n    var _this8 = this;\n\n    return (0,_base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)(function* () {\n      var {\n        address,\n        decimals = 18,\n        image,\n        symbol\n      } = _ref;\n\n      var provider = _this8.getProvider();\n\n      if (!provider) throw new _base_3b1382b0_esm_js__WEBPACK_IMPORTED_MODULE_0__.c();\n      yield provider.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: {\n            address,\n            decimals,\n            image,\n            symbol\n          }\n        }\n      });\n    })();\n  }\n\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wagmi-private/dist/wagmi-private.esm.js\n");

/***/ }),

/***/ "./node_modules/wagmi/dist/wagmi.esm.js":
/*!**********************************************!*\
  !*** ./node_modules/wagmi/dist/wagmi.esm.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AddChainError\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.AddChainError; },\n/* harmony export */   \"ChainNotConfiguredError\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.ChainNotConfiguredError; },\n/* harmony export */   \"Connector\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.Connector; },\n/* harmony export */   \"ConnectorAlreadyConnectedError\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.ConnectorAlreadyConnectedError; },\n/* harmony export */   \"ConnectorNotFoundError\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.ConnectorNotFoundError; },\n/* harmony export */   \"InjectedConnector\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.InjectedConnector; },\n/* harmony export */   \"SwitchChainError\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.SwitchChainError; },\n/* harmony export */   \"UserRejectedRequestError\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.UserRejectedRequestError; },\n/* harmony export */   \"allChains\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.allChains; },\n/* harmony export */   \"chain\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.chain; },\n/* harmony export */   \"defaultChains\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.defaultChains; },\n/* harmony export */   \"defaultL2Chains\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.defaultL2Chains; },\n/* harmony export */   \"developmentChains\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.developmentChains; },\n/* harmony export */   \"erc1155ABI\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.erc1155ABI; },\n/* harmony export */   \"erc20ABI\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.erc20ABI; },\n/* harmony export */   \"erc721ABI\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.erc721ABI; },\n/* harmony export */   \"normalizeChainId\": function() { return /* reexport safe */ wagmi_private__WEBPACK_IMPORTED_MODULE_1__.normalizeChainId; },\n/* harmony export */   \"Context\": function() { return /* binding */ Context; },\n/* harmony export */   \"Provider\": function() { return /* binding */ Provider; },\n/* harmony export */   \"useAccount\": function() { return /* binding */ useAccount; },\n/* harmony export */   \"useBalance\": function() { return /* binding */ useBalance; },\n/* harmony export */   \"useBlockNumber\": function() { return /* binding */ useBlockNumber; },\n/* harmony export */   \"useConnect\": function() { return /* binding */ useConnect; },\n/* harmony export */   \"useContext\": function() { return /* binding */ useContext; },\n/* harmony export */   \"useContract\": function() { return /* binding */ useContract; },\n/* harmony export */   \"useContractEvent\": function() { return /* binding */ useContractEvent; },\n/* harmony export */   \"useContractRead\": function() { return /* binding */ useContractRead; },\n/* harmony export */   \"useContractWrite\": function() { return /* binding */ useContractWrite; },\n/* harmony export */   \"useEnsAvatar\": function() { return /* binding */ useEnsAvatar; },\n/* harmony export */   \"useEnsLookup\": function() { return /* binding */ useEnsLookup; },\n/* harmony export */   \"useEnsResolver\": function() { return /* binding */ useEnsResolver; },\n/* harmony export */   \"useFeeData\": function() { return /* binding */ useFeeData; },\n/* harmony export */   \"useNetwork\": function() { return /* binding */ useNetwork; },\n/* harmony export */   \"useProvider\": function() { return /* binding */ useProvider; },\n/* harmony export */   \"useSignMessage\": function() { return /* binding */ useSignMessage; },\n/* harmony export */   \"useSigner\": function() { return /* binding */ useSigner; },\n/* harmony export */   \"useToken\": function() { return /* binding */ useToken; },\n/* harmony export */   \"useTransaction\": function() { return /* binding */ useTransaction; },\n/* harmony export */   \"useWaitForTransaction\": function() { return /* binding */ useWaitForTransaction; },\n/* harmony export */   \"useWebSocketProvider\": function() { return /* binding */ useWebSocketProvider; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/providers */ \"./node_modules/@ethersproject/providers/lib.esm/index.js\");\n/* harmony import */ var wagmi_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wagmi-private */ \"./node_modules/wagmi-private/dist/wagmi-private.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n\n\n\n\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar useProvider = () => {\n  var {\n    state\n  } = useContext();\n  return state.provider;\n};\n\nvar useWebSocketProvider = () => {\n  var {\n    state\n  } = useContext();\n  return state.webSocketProvider;\n};\n\nvar useCacheBuster = () => {\n  var context = useContext();\n  return context.state.cacheBuster;\n};\n\nvar useLocalStorage = function useLocalStorage(key) {\n  var defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var [value, setValue] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => {\n    if (typeof localStorage === 'undefined') return defaultState;\n    var value = localStorage.getItem(key);\n\n    try {\n      return value ? JSON.parse(value) : defaultState;\n    } catch (error) {\n      console.warn(error);\n      return defaultState;\n    }\n  });\n  var setLocalStorage = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(newValue => {\n    if (newValue === value) return;\n    setValue(newValue);\n    if (newValue === null) localStorage.removeItem(key);else localStorage.setItem(key, JSON.stringify(newValue));\n\n    if (newValue === null) {\n      localStorage.removeItem(key);\n    } else {\n      try {\n        localStorage.setItem(key, JSON.stringify(newValue));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, [value, setValue, key]);\n  return [value, setLocalStorage];\n};\n\nvar initialState$e = {\n  loading: false\n};\nvar useEnsAvatar = function useEnsAvatar() {\n  var {\n    addressOrName,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var cacheBuster = useCacheBuster();\n  var provider = useProvider();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$e);\n  var getEnsAvatar = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var config_ = config !== null && config !== void 0 ? config : {\n          addressOrName\n        };\n        if (!config_.addressOrName) throw new Error('addressOrName is required');\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true\n        }));\n        var avatar = yield provider.getAvatar(config_.addressOrName);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          avatar,\n          loading: false\n        }));\n        return avatar;\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return error;\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [addressOrName, provider]); // Fetch avatar when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip || !addressOrName) return;\n    var didCancel = false;\n    if (didCancel) return;\n    getEnsAvatar({\n      addressOrName\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, [addressOrName, cacheBuster, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.avatar,\n    loading: state.loading,\n    error: state.error\n  }, getEnsAvatar];\n};\n\nvar initialState$d = {\n  loading: false\n};\nvar useEnsLookup = function useEnsLookup() {\n  var {\n    address,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var cacheBuster = useCacheBuster();\n  var provider = useProvider();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$d);\n  var lookupAddress = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var config_ = config !== null && config !== void 0 ? config : {\n          address\n        };\n        if (!config_.address) throw new Error('address is required');\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true\n        }));\n        var ens = yield provider.lookupAddress(config_.address);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          ens,\n          loading: false\n        }));\n        return {\n          data: ens,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [address, provider]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip || !address) return;\n    var didCancel = false;\n    if (didCancel) return;\n    lookupAddress({\n      address\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, [address, cacheBuster, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.ens,\n    loading: state.loading,\n    error: state.error\n  }, lookupAddress];\n};\n\nvar initialState$c = {\n  loading: false\n};\nvar useEnsResolver = function useEnsResolver() {\n  var {\n    name,\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var cacheBuster = useCacheBuster();\n  var provider = useProvider();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$c);\n  var getEnsResolver = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var config_ = config !== null && config !== void 0 ? config : {\n          name\n        };\n        if (!config_.name) throw new Error('name is required');\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true\n        }));\n        var resolver = yield provider.getResolver(config_.name);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: false,\n          resolver\n        }));\n        return {\n          data: resolver,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [name, provider]); // Fetch avatar when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip || !name) return;\n    var didCancel = false;\n    if (didCancel) return;\n    getEnsResolver({\n      name\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, [name, cacheBuster, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.resolver,\n    loading: state.loading,\n    error: state.error\n  }, getEnsResolver];\n};\n\nvar useAccount = function useAccount() {\n  var _globalState$data;\n\n  var {\n    fetchEns\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    state: globalState,\n    setState\n  } = useContext();\n  var address = (_globalState$data = globalState.data) === null || _globalState$data === void 0 ? void 0 : _globalState$data.account;\n  var [{\n    data: ens,\n    error: ensError,\n    loading: ensLoading\n  }] = useEnsLookup({\n    address,\n    skip: !fetchEns\n  });\n  var [{\n    data: avatar,\n    error: avatarError,\n    loading: avatarLoading\n  }] = useEnsAvatar({\n    addressOrName: ens,\n    skip: !fetchEns || !ens\n  });\n  var disconnect = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setState(x => {\n      var _x$connector;\n\n      (_x$connector = x.connector) === null || _x$connector === void 0 ? void 0 : _x$connector.disconnect();\n      return {\n        cacheBuster: x.cacheBuster + 1\n      };\n    });\n  }, [setState]);\n  var error = ensError || avatarError;\n  var loading = ensLoading || avatarLoading;\n  return [{\n    data: address ? {\n      address,\n      connector: globalState.connector,\n      ens: ens ? {\n        avatar,\n        name: ens\n      } : undefined\n    } : undefined,\n    error,\n    loading\n  }, disconnect];\n};\n\nvar initialState$b = {\n  loading: false\n};\nvar useBlockNumber = function useBlockNumber() {\n  var {\n    skip,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var provider = useProvider();\n  var webSocketProvider = useWebSocketProvider();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$b);\n  var getBlockNumber = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/_asyncToGenerator(function* () {\n    try {\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        error: undefined,\n        loading: true\n      }));\n      var blockNumber = yield provider.getBlockNumber();\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        blockNumber,\n        loading: false\n      }));\n      return {\n        data: blockNumber,\n        error: undefined\n      };\n    } catch (error_) {\n      var error = error_;\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        error,\n        loading: false\n      }));\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }), [provider]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip) return;\n    var didCancel = false;\n    if (didCancel) return;\n    getBlockNumber();\n    return () => {\n      didCancel = true;\n    };\n  }, [skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!watch) return;\n\n    var listener = blockNumber => setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n      blockNumber\n    }));\n\n    var provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n    provider_.on('block', listener);\n    return () => {\n      provider_.off('block', listener);\n    };\n  }, []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.blockNumber,\n    error: state.error,\n    loading: state.loading\n  }, getBlockNumber];\n};\n\nvar initialState$a = {\n  loading: false\n};\nvar useFeeData = function useFeeData() {\n  var {\n    formatUnits = 'wei',\n    skip,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var provider = useProvider();\n  var [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  var cacheBuster = useCacheBuster();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$a);\n  var getFeeData = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/_asyncToGenerator(function* () {\n    try {\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        error: undefined,\n        loading: true\n      }));\n      var feeData = yield provider.getFeeData();\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        feeData,\n        loading: false\n      }));\n      return {\n        data: feeData,\n        error: undefined\n      };\n    } catch (error_) {\n      var error = error_;\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        error,\n        loading: false\n      }));\n      return {\n        data: undefined,\n        error\n      };\n    }\n  }), [provider]); // Fetch feeData on mount or when chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip) return;\n    var didCancel = false;\n    if (didCancel) return;\n    getFeeData();\n    return () => {\n      didCancel = true;\n    };\n  }, [cacheBuster, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!watch) return;\n    if (!blockNumber) return;\n    getFeeData();\n  }, [blockNumber]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  var formatted = state.feeData ? {\n    gasPrice: ethers__WEBPACK_IMPORTED_MODULE_2__.utils.formatUnits(state.feeData.gasPrice, formatUnits),\n    maxFeePerGas: ethers__WEBPACK_IMPORTED_MODULE_2__.utils.formatUnits(state.feeData.maxFeePerGas, formatUnits),\n    maxPriorityFeePerGas: ethers__WEBPACK_IMPORTED_MODULE_2__.utils.formatUnits(state.feeData.maxPriorityFeePerGas, formatUnits)\n  } : undefined;\n  return [{\n    data: state.feeData ? _objectSpread2(_objectSpread2({}, state.feeData), {}, {\n      formatted\n    }) : undefined,\n    loading: state.loading,\n    error: state.error\n  }, getFeeData];\n};\n\nvar initialState$9 = {\n  loading: false\n};\nvar useBalance = function useBalance() {\n  var {\n    addressOrName,\n    formatUnits = 'ether',\n    skip,\n    token,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    state: {\n      connector\n    }\n  } = useContext();\n  var cacheBuster = useCacheBuster();\n  var provider = useProvider();\n  var [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$9);\n  var getBalance = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var _config_$formatUnits;\n\n        var config_ = config !== null && config !== void 0 ? config : {\n          addressOrName,\n          formatUnits,\n          token\n        };\n        if (!config_.addressOrName) throw new Error('address is required');\n        var formatUnits_ = (_config_$formatUnits = config_.formatUnits) !== null && _config_$formatUnits !== void 0 ? _config_$formatUnits : 'ether';\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true\n        }));\n        var balance;\n\n        if (config_.token) {\n          var contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(config_.token, wagmi_private__WEBPACK_IMPORTED_MODULE_1__.erc20ABI, provider);\n          var value = yield contract.balanceOf(config_.addressOrName);\n          var decimals = yield contract.decimals();\n          var symbol = yield contract.symbol();\n          balance = {\n            decimals,\n            formatted: ethers__WEBPACK_IMPORTED_MODULE_2__.utils.formatUnits(value, formatUnits_),\n            symbol,\n            value\n          };\n        } else {\n          var _connector$chains, _chain$nativeCurrency, _chain$nativeCurrency2, _chain$nativeCurrency3, _chain$nativeCurrency4;\n\n          var _value = yield provider.getBalance(config_.addressOrName);\n\n          var chain = [...((_connector$chains = connector === null || connector === void 0 ? void 0 : connector.chains) !== null && _connector$chains !== void 0 ? _connector$chains : []), ...wagmi_private__WEBPACK_IMPORTED_MODULE_1__.defaultChains, ...wagmi_private__WEBPACK_IMPORTED_MODULE_1__.defaultL2Chains].find(x => x.id === provider.network.chainId);\n          balance = {\n            decimals: (_chain$nativeCurrency = chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency2 = chain.nativeCurrency) === null || _chain$nativeCurrency2 === void 0 ? void 0 : _chain$nativeCurrency2.decimals) !== null && _chain$nativeCurrency !== void 0 ? _chain$nativeCurrency : 18,\n            formatted: ethers__WEBPACK_IMPORTED_MODULE_2__.utils.formatUnits(_value, formatUnits_),\n            symbol: (_chain$nativeCurrency3 = chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency4 = chain.nativeCurrency) === null || _chain$nativeCurrency4 === void 0 ? void 0 : _chain$nativeCurrency4.symbol) !== null && _chain$nativeCurrency3 !== void 0 ? _chain$nativeCurrency3 : 'ETH',\n            value: _value\n          };\n        }\n\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          balance,\n          loading: false\n        }));\n        return {\n          data: balance,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [addressOrName, connector, formatUnits, provider, token]); // Fetch balance when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip || !addressOrName) return;\n    var didCancel = false;\n    if (didCancel) return;\n    getBalance({\n      addressOrName,\n      formatUnits,\n      token\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, [addressOrName, cacheBuster, skip, token]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!watch) return;\n    if (!blockNumber) return;\n    if (!addressOrName) return;\n    getBalance({\n      addressOrName,\n      formatUnits,\n      token\n    });\n  }, [blockNumber]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.balance,\n    error: state.error,\n    loading: state.loading\n  }, getBalance];\n};\n\nvar initialState$8 = {\n  loading: false\n};\nvar useConnect = () => {\n  var _globalState$data;\n\n  var {\n    state: globalState,\n    setState: setGlobalState,\n    setLastUsedConnector\n  } = useContext();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$8);\n  var connect = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (connector) {\n      try {\n        var activeConnector = globalState === null || globalState === void 0 ? void 0 : globalState.connector;\n        if (connector === activeConnector) throw new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.ConnectorAlreadyConnectedError();\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: true,\n          connector,\n          error: undefined\n        }));\n        var data = yield connector.connect(); // Update connector globally only after successful connection\n\n        setGlobalState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          connector,\n          data\n        }));\n        setLastUsedConnector(connector.name);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: false\n        }));\n        return {\n          data,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          connector: undefined,\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [globalState.connector, setGlobalState, setLastUsedConnector]); // Keep connector in sync with global connector\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var didCancel = false;\n    if (didCancel) return;\n    setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n      connector: globalState.connector,\n      error: undefined\n    }));\n    return () => {\n      didCancel = true;\n    };\n  }, [globalState.connector]);\n  return [{\n    data: {\n      connected: !!((_globalState$data = globalState.data) !== null && _globalState$data !== void 0 && _globalState$data.account),\n      connector: state.connector,\n      connectors: globalState.connectors\n    },\n    error: state.error,\n    loading: state.loading || globalState.connecting\n  }, connect];\n};\n\nvar initialState$7 = {\n  loading: false\n};\nvar useNetwork = () => {\n  var _data$chain, _data$chain2, _connector$chains;\n\n  var {\n    state: {\n      connector,\n      data\n    }\n  } = useContext();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$7);\n  var chainId = data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id;\n  var unsupported = data === null || data === void 0 ? void 0 : (_data$chain2 = data.chain) === null || _data$chain2 === void 0 ? void 0 : _data$chain2.unsupported;\n  var activeChains = (_connector$chains = connector === null || connector === void 0 ? void 0 : connector.chains) !== null && _connector$chains !== void 0 ? _connector$chains : [];\n  var activeChain = [...activeChains, ...wagmi_private__WEBPACK_IMPORTED_MODULE_1__.allChains].find(x => x.id === chainId);\n  var switchNetwork = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (chainId) {\n      if (!(connector !== null && connector !== void 0 && connector.switchChain)) return {\n        data: undefined,\n        error: new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.SwitchChainError()\n      };\n\n      try {\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true\n        }));\n        var chain = yield connector.switchChain(chainId);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: false\n        }));\n        return {\n          data: chain,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [connector]);\n  return [{\n    data: {\n      chain: chainId ? _objectSpread2(_objectSpread2({}, activeChain), {}, {\n        id: chainId,\n        unsupported\n      }) : undefined,\n      chains: activeChains\n    },\n    error: state.error,\n    loading: state.loading\n  }, connector !== null && connector !== void 0 && connector.switchChain ? switchNetwork : undefined];\n};\n\nvar initialState$6 = {\n  data: undefined,\n  error: undefined,\n  loading: false\n};\nvar useSigner = function useSigner() {\n  var {\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var cacheBuster = useCacheBuster();\n  var {\n    state: {\n      connector\n    }\n  } = useContext();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$6);\n  var getSigner = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/_asyncToGenerator(function* () {\n    try {\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        error: undefined,\n        loading: true\n      }));\n      var signer = yield connector === null || connector === void 0 ? void 0 : connector.getSigner();\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        data: signer,\n        loading: false\n      }));\n      return signer;\n    } catch (error_) {\n      var error = error_;\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        data: undefined,\n        error,\n        loading: false\n      }));\n    }\n  }), [connector]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip) return;\n    var didCancel = false;\n    if (didCancel) return;\n    getSigner();\n    return () => {\n      didCancel = true;\n    };\n  }, [cacheBuster, connector, getSigner, skip]);\n  return [state, getSigner];\n};\n\nvar initialState$5 = {\n  loading: false\n};\nvar useSignMessage = function useSignMessage() {\n  var {\n    message\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    state: {\n      connector\n    }\n  } = useContext();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$5);\n  var signMessage = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var config_ = config !== null && config !== void 0 ? config : {\n          message\n        };\n        if (!config_.message) throw new Error('message is required');\n        if (!connector) throw new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.ConnectorNotFoundError();\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true\n        }));\n        var signer = yield connector.getSigner();\n        var signature = yield signer.signMessage(config_.message);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          signature,\n          loading: false\n        }));\n        return {\n          data: signature,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        if (error_.code === 4001) error = new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.UserRejectedRequestError();\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [connector, message]);\n  return [{\n    data: state.signature,\n    error: state.error,\n    loading: state.loading\n  }, signMessage];\n};\n\nvar getContract = _ref => {\n  var {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return new ethers__WEBPACK_IMPORTED_MODULE_2__.Contract(addressOrName, contractInterface, signerOrProvider);\n};\n\nvar useContract = _ref2 => {\n  var {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref2;\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return getContract({\n      addressOrName,\n      contractInterface,\n      signerOrProvider\n    });\n  }, [addressOrName, contractInterface, signerOrProvider]);\n};\n\nvar useContractEvent = function useContractEvent(contractConfig, eventName, listener) {\n  var {\n    once\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var provider = useProvider();\n  var webSocketProvider = useWebSocketProvider();\n  var contract = useContract(_objectSpread2({\n    signerOrProvider: webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider\n  }, contractConfig));\n  var listenerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(listener);\n  listenerRef.current = listener;\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    var handler = function handler() {\n      for (var _len = arguments.length, event = new Array(_len), _key = 0; _key < _len; _key++) {\n        event[_key] = arguments[_key];\n      }\n\n      return listenerRef.current(event);\n    };\n\n    var contract_ = contract;\n    if (once) contract_.once(eventName, handler);else contract_.on(eventName, handler);\n    return () => {\n      contract_.off(eventName, handler);\n      return;\n    };\n  }, [contract, eventName]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n};\n\nvar initialState$4 = {\n  loading: false\n};\nvar useContractRead = function useContractRead(contractConfig, functionName) {\n  var {\n    args,\n    overrides,\n    skip,\n    watch\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var provider = useProvider();\n  var contract = useContract(_objectSpread2({\n    signerOrProvider: provider\n  }, contractConfig));\n  var [{\n    data: blockNumber\n  }] = useBlockNumber({\n    skip: true,\n    watch\n  });\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$4);\n  var read = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var config_ = config !== null && config !== void 0 ? config : {\n          args,\n          overrides\n        };\n        var params = [...(Array.isArray(config_.args) ? config_.args : config_.args ? [config_.args] : []), ...(config_.overrides ? [config_.overrides] : [])];\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true,\n          response: undefined\n        }));\n        var response = yield contract[functionName](...params);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: false,\n          response\n        }));\n        return {\n          data: response,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [args, contract, functionName, overrides]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip) return;\n    var didCancel = false;\n    if (didCancel) return;\n    read({\n      args,\n      overrides\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, [args, overrides, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!watch) return;\n    if (!blockNumber) return;\n    read({\n      args,\n      overrides\n    });\n  }, [blockNumber]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.response,\n    error: state.error,\n    loading: state.loading\n  }, read];\n};\n\nvar initialState$3 = {\n  loading: false\n};\nvar useContractWrite = function useContractWrite(contractConfig, functionName) {\n  var {\n    args,\n    overrides\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var {\n    state: {\n      connector\n    }\n  } = useContext();\n  var contract = useContract(contractConfig);\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$3);\n  var write = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var config_ = config !== null && config !== void 0 ? config : {\n          args,\n          overrides\n        };\n        if (!connector) throw new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.ConnectorNotFoundError();\n        var params = [...(Array.isArray(config_.args) ? config_.args : config_.args ? [config_.args] : []), ...(config_.overrides ? [config_.overrides] : [])];\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true,\n          response: undefined\n        }));\n        var signer = yield connector.getSigner();\n        var contract_ = contract.connect(signer);\n        var response = yield contract_[functionName](...params);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: false,\n          response\n        }));\n        return {\n          data: response,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        if (error_.code === 4001) error = new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.UserRejectedRequestError();\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [args, connector, contract, functionName, overrides]);\n  return [{\n    data: state.response,\n    error: state.error,\n    loading: state.loading\n  }, write];\n};\n\nvar initialState$2 = {\n  loading: false\n};\nvar useToken = function useToken() {\n  var {\n    address,\n    formatUnits = 'ether',\n    skip\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    state: {\n      connector\n    }\n  } = useContext();\n  var provider = useProvider();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$2);\n  var getToken = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var _config_$formatUnits;\n\n        var config_ = config !== null && config !== void 0 ? config : {\n          address,\n          formatUnits\n        };\n        if (!config_.address) throw new Error('address is required');\n        var contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(config_.address, wagmi_private__WEBPACK_IMPORTED_MODULE_1__.erc20ABI, provider);\n        var formatUnits_ = (_config_$formatUnits = config_.formatUnits) !== null && _config_$formatUnits !== void 0 ? _config_$formatUnits : 'ether';\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error: undefined,\n          loading: true\n        }));\n        var symbol = yield contract.symbol();\n        var decimals = yield contract.decimals();\n        var totalSupply = yield contract.totalSupply();\n        var token = {\n          address: config_.address,\n          decimals,\n          symbol,\n          totalSupply: {\n            formatted: ethers__WEBPACK_IMPORTED_MODULE_2__.utils.formatUnits(totalSupply, formatUnits_),\n            value: totalSupply\n          }\n        };\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          token,\n          loading: false\n        }));\n        return {\n          data: token,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [address, formatUnits, provider]);\n  var watchToken = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (token) {\n      if (!(connector !== null && connector !== void 0 && connector.watchAsset)) return false;\n\n      try {\n        yield connector.watchAsset(token);\n        return true;\n      } catch (error) {\n        return error;\n      }\n    });\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [connector]);\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip || !address) return;\n    var didCancel = false;\n    if (didCancel) return;\n    getToken({\n      address,\n      formatUnits\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, [address, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.token ? _objectSpread2(_objectSpread2({}, state.token), {}, {\n      address\n    }) : undefined,\n    error: state.error,\n    loading: state.loading\n  }, watchToken, getToken];\n};\n\nvar initialState$1 = {\n  loading: false\n};\nvar useTransaction = function useTransaction() {\n  var {\n    request\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    state: {\n      connector\n    }\n  } = useContext();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState$1);\n  var sendTransaction = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var config_ = config !== null && config !== void 0 ? config : {\n          request\n        };\n        if (!config_.request) throw new Error('request is required');\n        if (!connector) throw new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.ConnectorNotFoundError();\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: true\n        }));\n        var signer = yield connector.getSigner();\n        var transaction = yield signer.sendTransaction(config_.request);\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: false,\n          transaction\n        }));\n        return {\n          data: transaction,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        if (error_.code === 4001) error = new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.UserRejectedRequestError();\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [connector, request]);\n  return [{\n    data: state.transaction,\n    error: state.error,\n    loading: state.loading\n  }, sendTransaction];\n};\n\nvar initialState = {\n  loading: false\n};\nvar useWaitForTransaction = function useWaitForTransaction() {\n  var {\n    confirmations,\n    hash,\n    skip,\n    timeout,\n    wait: wait_\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var provider = useProvider();\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(initialState);\n  var wait = react__WEBPACK_IMPORTED_MODULE_0__.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      try {\n        var config_ = config !== null && config !== void 0 ? config : {\n          confirmations,\n          hash,\n          timeout,\n          wait: wait_\n        };\n        if (!config_.hash && !config_.wait) throw new Error('hash or wait is required');\n        var promise; // eslint-disable-next-line testing-library/await-async-utils\n\n        if (config_.wait) promise = config_.wait(config_.confirmations);else if (config_.hash) promise = provider.waitForTransaction(config_.hash, config_.confirmations, config_.timeout);else throw new Error('hash or wait is required');\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: true\n        }));\n        var receipt = yield promise;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          loading: false,\n          receipt\n        }));\n        return {\n          data: receipt,\n          error: undefined\n        };\n      } catch (error_) {\n        var error = error_;\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          error,\n          loading: false\n        }));\n        return {\n          data: undefined,\n          error\n        };\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [wait_, confirmations, hash, timeout, provider]); // Fetch balance when deps or chain changes\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (skip || !hash && !wait_) return;\n    var didCancel = false;\n    if (didCancel) return; // eslint-disable-next-line testing-library/await-async-utils\n\n    wait({\n      confirmations,\n      hash,\n      timeout,\n      wait: wait_\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, [wait_, hash, skip]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return [{\n    data: state.receipt,\n    error: state.error,\n    loading: state.loading\n  }, wait];\n};\n\nvar Context = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nvar Provider = _ref => {\n  var _state$data2, _state$data2$chain, _state$data4, _state$data4$chain, _state$data6, _state$data6$chain;\n\n  var {\n    autoConnect = false,\n    children,\n    connectors: connectors_ = [new wagmi_private__WEBPACK_IMPORTED_MODULE_1__.InjectedConnector()],\n    connectorStorageKey = 'wagmi.wallet',\n    provider: provider_ = (0,_ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__.getDefaultProvider)(),\n    webSocketProvider: webSocketProvider_\n  } = _ref;\n  var [lastUsedConnector, setLastUsedConnector] = useLocalStorage(connectorStorageKey);\n  var [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    cacheBuster: 1,\n    connecting: autoConnect\n  });\n  var connectors = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _state$data, _state$data$chain;\n\n    if (typeof connectors_ !== 'function') return connectors_;\n    return connectors_({\n      chainId: (_state$data = state.data) === null || _state$data === void 0 ? void 0 : (_state$data$chain = _state$data.chain) === null || _state$data$chain === void 0 ? void 0 : _state$data$chain.id\n    });\n  }, [connectors_, (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : (_state$data2$chain = _state$data2.chain) === null || _state$data2$chain === void 0 ? void 0 : _state$data2$chain.id]);\n  var provider = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _state$data3, _state$data3$chain;\n\n    if (typeof provider_ !== 'function') return provider_;\n    return provider_({\n      chainId: (_state$data3 = state.data) === null || _state$data3 === void 0 ? void 0 : (_state$data3$chain = _state$data3.chain) === null || _state$data3$chain === void 0 ? void 0 : _state$data3$chain.id,\n      connector: state.connector\n    });\n  }, [provider_, (_state$data4 = state.data) === null || _state$data4 === void 0 ? void 0 : (_state$data4$chain = _state$data4.chain) === null || _state$data4$chain === void 0 ? void 0 : _state$data4$chain.id, state.connector]);\n  var webSocketProvider = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _state$data5, _state$data5$chain;\n\n    if (!webSocketProvider_) return undefined;\n    if (typeof webSocketProvider_ !== 'function') return webSocketProvider_;\n    return webSocketProvider_({\n      chainId: (_state$data5 = state.data) === null || _state$data5 === void 0 ? void 0 : (_state$data5$chain = _state$data5.chain) === null || _state$data5$chain === void 0 ? void 0 : _state$data5$chain.id,\n      connector: state.connector\n    });\n  }, [webSocketProvider_, (_state$data6 = state.data) === null || _state$data6 === void 0 ? void 0 : (_state$data6$chain = _state$data6.chain) === null || _state$data6$chain === void 0 ? void 0 : _state$data6$chain.id, state.connector]); // Attempt to connect on mount\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!autoConnect) return;\n\n    _asyncToGenerator(function* () {\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        connecting: true\n      }));\n      var sorted = lastUsedConnector ? [...connectors].sort(x => x.name === lastUsedConnector ? -1 : 1) : connectors;\n\n      var _loop = function* _loop(connector) {\n        if (!connector.ready || !connector.isAuthorized) return \"continue\";\n        var isAuthorized = yield connector.isAuthorized();\n        if (!isAuthorized) return \"continue\";\n        var data = yield connector.connect();\n        setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n          connector,\n          data\n        }));\n        return \"break\";\n      };\n\n      for (var connector of sorted) {\n        var _ret = yield* _loop(connector);\n\n        if (_ret === \"continue\") continue;\n        if (_ret === \"break\") break;\n      }\n\n      setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n        connecting: false\n      }));\n    })();\n  }, []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n  // Make sure connectors close\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    return () => {\n      if (!state.connector) return;\n      state.connector.disconnect();\n    };\n  }, [state.connector]); // Watch connector for events\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!state.connector) return;\n\n    var onChange = data => setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n      cacheBuster: x.cacheBuster + 1,\n      data: _objectSpread2(_objectSpread2({}, x.data), data)\n    }));\n\n    var onDisconnect = () => setState({\n      cacheBuster: 1\n    });\n\n    var onError = error => setState(x => _objectSpread2(_objectSpread2({}, x), {}, {\n      error\n    }));\n\n    state.connector.on('change', onChange);\n    state.connector.on('disconnect', onDisconnect);\n    state.connector.on('error', onError);\n    return () => {\n      if (!state.connector) return;\n      state.connector.off('change', onChange);\n      state.connector.off('disconnect', onDisconnect);\n      state.connector.off('error', onError);\n    };\n  }, [state.connector]);\n  var value = {\n    state: {\n      cacheBuster: state.cacheBuster,\n      connecting: state.connecting,\n      connectors,\n      connector: state.connector,\n      data: state.data,\n      provider,\n      webSocketProvider\n    },\n    setState,\n    setLastUsedConnector\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Provider, {\n    value\n  }, children);\n};\nvar useContext = () => {\n  var context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n  if (!context) throw Error('Must be used within Provider');\n  return context;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2FnbWkvZGlzdC93YWdtaS5lc20uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStCO0FBQytCO0FBQzZJO0FBQ3NIO0FBQ2hSOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQixzQkFBc0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBCQUEwQiwyQ0FBYztBQUN4QztBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILHdCQUF3Qiw4Q0FBaUI7QUFDekM7QUFDQTtBQUNBLHdEQUF3RDs7QUFFeEQ7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFD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QUUsNENBQWU7QUFDakI7O0FBRUE7QUFDQSxvREFBb0QsUUFBUTtBQUM1RDtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELFFBQVE7QUFDOUQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG9EQUFvRCxRQUFRO0FBQzVEO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTs7QUFFQSxFQUFFLDRDQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxzQkFBc0I7O0FBRXpCLEVBQUUsNENBQWU7QUFDakI7O0FBRUEseUVBQXlFLFFBQVE7QUFDakY7QUFDQSw0Q0FBNEM7QUFDNUMsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTCx5RUFBeUUsUUFBUTtBQUNqRjtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0RBQW1CO0FBQ3pDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQkFBZ0IsNkNBQWdCO0FBQ2hDO0FBQ0E7QUFDQTs7QUFFa1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhZ21pL2Rpc3Qvd2FnbWkuZXNtLmpzPzIwZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0RGVmYXVsdFByb3ZpZGVyIH0gZnJvbSAnQGV0aGVyc3Byb2plY3QvcHJvdmlkZXJzJztcbmltcG9ydCB7IGVyYzIwQUJJLCBkZWZhdWx0Q2hhaW5zLCBkZWZhdWx0TDJDaGFpbnMsIENvbm5lY3RvckFscmVhZHlDb25uZWN0ZWRFcnJvciwgYWxsQ2hhaW5zLCBTd2l0Y2hDaGFpbkVycm9yLCBDb25uZWN0b3JOb3RGb3VuZEVycm9yLCBVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3IsIEluamVjdGVkQ29ubmVjdG9yIH0gZnJvbSAnd2FnbWktcHJpdmF0ZSc7XG5leHBvcnQgeyBBZGRDaGFpbkVycm9yLCBDaGFpbk5vdENvbmZpZ3VyZWRFcnJvciwgQ29ubmVjdG9yLCBDb25uZWN0b3JBbHJlYWR5Q29ubmVjdGVkRXJyb3IsIENvbm5lY3Rvck5vdEZvdW5kRXJyb3IsIEluamVjdGVkQ29ubmVjdG9yLCBTd2l0Y2hDaGFpbkVycm9yLCBVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3IsIGFsbENoYWlucywgY2hhaW4sIGRlZmF1bHRDaGFpbnMsIGRlZmF1bHRMMkNoYWlucywgZGV2ZWxvcG1lbnRDaGFpbnMsIGVyYzExNTVBQkksIGVyYzIwQUJJLCBlcmM3MjFBQkksIG5vcm1hbGl6ZUNoYWluSWQgfSBmcm9tICd3YWdtaS1wcml2YXRlJztcbmltcG9ydCB7IHV0aWxzLCBldGhlcnMsIENvbnRyYWN0IH0gZnJvbSAnZXRoZXJzJztcblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkge1xuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTtcbiAgICBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlO1xuICAgIH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpO1xuICB9XG5cbiAgcmV0dXJuIGtleXM7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQyKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9O1xuICAgIGkgJSAyID8gb3duS2V5cyhPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICB0cnkge1xuICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlamVjdChlcnJvcik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG5cbiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7XG4gICAgfSk7XG4gIH07XG59XG5cbnZhciB1c2VQcm92aWRlciA9ICgpID0+IHtcbiAgdmFyIHtcbiAgICBzdGF0ZVxuICB9ID0gdXNlQ29udGV4dCgpO1xuICByZXR1cm4gc3RhdGUucHJvdmlkZXI7XG59O1xuXG52YXIgdXNlV2ViU29ja2V0UHJvdmlkZXIgPSAoKSA9PiB7XG4gIHZhciB7XG4gICAgc3RhdGVcbiAgfSA9IHVzZUNvbnRleHQoKTtcbiAgcmV0dXJuIHN0YXRlLndlYlNvY2tldFByb3ZpZGVyO1xufTtcblxudmFyIHVzZUNhY2hlQnVzdGVyID0gKCkgPT4ge1xuICB2YXIgY29udGV4dCA9IHVzZUNvbnRleHQoKTtcbiAgcmV0dXJuIGNvbnRleHQuc3RhdGUuY2FjaGVCdXN0ZXI7XG59O1xuXG52YXIgdXNlTG9jYWxTdG9yYWdlID0gZnVuY3Rpb24gdXNlTG9jYWxTdG9yYWdlKGtleSkge1xuICB2YXIgZGVmYXVsdFN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBudWxsO1xuICB2YXIgW3ZhbHVlLCBzZXRWYWx1ZV0gPSBSZWFjdC51c2VTdGF0ZSgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBsb2NhbFN0b3JhZ2UgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gZGVmYXVsdFN0YXRlO1xuICAgIHZhciB2YWx1ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHZhbHVlID8gSlNPTi5wYXJzZSh2YWx1ZSkgOiBkZWZhdWx0U3RhdGU7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUud2FybihlcnJvcik7XG4gICAgICByZXR1cm4gZGVmYXVsdFN0YXRlO1xuICAgIH1cbiAgfSk7XG4gIHZhciBzZXRMb2NhbFN0b3JhZ2UgPSBSZWFjdC51c2VDYWxsYmFjayhuZXdWYWx1ZSA9PiB7XG4gICAgaWYgKG5ld1ZhbHVlID09PSB2YWx1ZSkgcmV0dXJuO1xuICAgIHNldFZhbHVlKG5ld1ZhbHVlKTtcbiAgICBpZiAobmV3VmFsdWUgPT09IG51bGwpIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7ZWxzZSBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KG5ld1ZhbHVlKSk7XG5cbiAgICBpZiAobmV3VmFsdWUgPT09IG51bGwpIHtcbiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkobmV3VmFsdWUpKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3ZhbHVlLCBzZXRWYWx1ZSwga2V5XSk7XG4gIHJldHVybiBbdmFsdWUsIHNldExvY2FsU3RvcmFnZV07XG59O1xuXG52YXIgaW5pdGlhbFN0YXRlJGUgPSB7XG4gIGxvYWRpbmc6IGZhbHNlXG59O1xudmFyIHVzZUVuc0F2YXRhciA9IGZ1bmN0aW9uIHVzZUVuc0F2YXRhcigpIHtcbiAgdmFyIHtcbiAgICBhZGRyZXNzT3JOYW1lLFxuICAgIHNraXBcbiAgfSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBjYWNoZUJ1c3RlciA9IHVzZUNhY2hlQnVzdGVyKCk7XG4gIHZhciBwcm92aWRlciA9IHVzZVByb3ZpZGVyKCk7XG4gIHZhciBbc3RhdGUsIHNldFN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGluaXRpYWxTdGF0ZSRlKTtcbiAgdmFyIGdldEVuc0F2YXRhciA9IFJlYWN0LnVzZUNhbGxiYWNrKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoZnVuY3Rpb24qIChjb25maWcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBjb25maWdfID0gY29uZmlnICE9PSBudWxsICYmIGNvbmZpZyAhPT0gdm9pZCAwID8gY29uZmlnIDoge1xuICAgICAgICAgIGFkZHJlc3NPck5hbWVcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKCFjb25maWdfLmFkZHJlc3NPck5hbWUpIHRocm93IG5ldyBFcnJvcignYWRkcmVzc09yTmFtZSBpcyByZXF1aXJlZCcpO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkLFxuICAgICAgICAgIGxvYWRpbmc6IHRydWVcbiAgICAgICAgfSkpO1xuICAgICAgICB2YXIgYXZhdGFyID0geWllbGQgcHJvdmlkZXIuZ2V0QXZhdGFyKGNvbmZpZ18uYWRkcmVzc09yTmFtZSk7XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGF2YXRhcixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBhdmF0YXI7XG4gICAgICB9IGNhdGNoIChlcnJvcl8pIHtcbiAgICAgICAgdmFyIGVycm9yID0gZXJyb3JfO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfSgpLCBbYWRkcmVzc09yTmFtZSwgcHJvdmlkZXJdKTsgLy8gRmV0Y2ggYXZhdGFyIHdoZW4gZGVwcyBvciBjaGFpbiBjaGFuZ2VzXG5cbiAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc2tpcCB8fCAhYWRkcmVzc09yTmFtZSkgcmV0dXJuO1xuICAgIHZhciBkaWRDYW5jZWwgPSBmYWxzZTtcbiAgICBpZiAoZGlkQ2FuY2VsKSByZXR1cm47XG4gICAgZ2V0RW5zQXZhdGFyKHtcbiAgICAgIGFkZHJlc3NPck5hbWVcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZGlkQ2FuY2VsID0gdHJ1ZTtcbiAgICB9O1xuICB9LCBbYWRkcmVzc09yTmFtZSwgY2FjaGVCdXN0ZXIsIHNraXBdKTtcbiAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICByZXR1cm4gW3tcbiAgICBkYXRhOiBzdGF0ZS5hdmF0YXIsXG4gICAgbG9hZGluZzogc3RhdGUubG9hZGluZyxcbiAgICBlcnJvcjogc3RhdGUuZXJyb3JcbiAgfSwgZ2V0RW5zQXZhdGFyXTtcbn07XG5cbnZhciBpbml0aWFsU3RhdGUkZCA9IHtcbiAgbG9hZGluZzogZmFsc2Vcbn07XG52YXIgdXNlRW5zTG9va3VwID0gZnVuY3Rpb24gdXNlRW5zTG9va3VwKCkge1xuICB2YXIge1xuICAgIGFkZHJlc3MsXG4gICAgc2tpcFxuICB9ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGNhY2hlQnVzdGVyID0gdXNlQ2FjaGVCdXN0ZXIoKTtcbiAgdmFyIHByb3ZpZGVyID0gdXNlUHJvdmlkZXIoKTtcbiAgdmFyIFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoaW5pdGlhbFN0YXRlJGQpO1xuICB2YXIgbG9va3VwQWRkcmVzcyA9IFJlYWN0LnVzZUNhbGxiYWNrKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoZnVuY3Rpb24qIChjb25maWcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBjb25maWdfID0gY29uZmlnICE9PSBudWxsICYmIGNvbmZpZyAhPT0gdm9pZCAwID8gY29uZmlnIDoge1xuICAgICAgICAgIGFkZHJlc3NcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKCFjb25maWdfLmFkZHJlc3MpIHRocm93IG5ldyBFcnJvcignYWRkcmVzcyBpcyByZXF1aXJlZCcpO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkLFxuICAgICAgICAgIGxvYWRpbmc6IHRydWVcbiAgICAgICAgfSkpO1xuICAgICAgICB2YXIgZW5zID0geWllbGQgcHJvdmlkZXIubG9va3VwQWRkcmVzcyhjb25maWdfLmFkZHJlc3MpO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlbnMsXG4gICAgICAgICAgbG9hZGluZzogZmFsc2VcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGE6IGVucyxcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkXG4gICAgICAgIH07XG4gICAgICB9IGNhdGNoIChlcnJvcl8pIHtcbiAgICAgICAgdmFyIGVycm9yID0gZXJyb3JfO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YTogdW5kZWZpbmVkLFxuICAgICAgICAgIGVycm9yXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7XG4gICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0oKSwgW2FkZHJlc3MsIHByb3ZpZGVyXSk7XG4gIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHNraXAgfHwgIWFkZHJlc3MpIHJldHVybjtcbiAgICB2YXIgZGlkQ2FuY2VsID0gZmFsc2U7XG4gICAgaWYgKGRpZENhbmNlbCkgcmV0dXJuO1xuICAgIGxvb2t1cEFkZHJlc3Moe1xuICAgICAgYWRkcmVzc1xuICAgIH0pO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkaWRDYW5jZWwgPSB0cnVlO1xuICAgIH07XG4gIH0sIFthZGRyZXNzLCBjYWNoZUJ1c3Rlciwgc2tpcF0pO1xuICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIHJldHVybiBbe1xuICAgIGRhdGE6IHN0YXRlLmVucyxcbiAgICBsb2FkaW5nOiBzdGF0ZS5sb2FkaW5nLFxuICAgIGVycm9yOiBzdGF0ZS5lcnJvclxuICB9LCBsb29rdXBBZGRyZXNzXTtcbn07XG5cbnZhciBpbml0aWFsU3RhdGUkYyA9IHtcbiAgbG9hZGluZzogZmFsc2Vcbn07XG52YXIgdXNlRW5zUmVzb2x2ZXIgPSBmdW5jdGlvbiB1c2VFbnNSZXNvbHZlcigpIHtcbiAgdmFyIHtcbiAgICBuYW1lLFxuICAgIHNraXBcbiAgfSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBjYWNoZUJ1c3RlciA9IHVzZUNhY2hlQnVzdGVyKCk7XG4gIHZhciBwcm92aWRlciA9IHVzZVByb3ZpZGVyKCk7XG4gIHZhciBbc3RhdGUsIHNldFN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGluaXRpYWxTdGF0ZSRjKTtcbiAgdmFyIGdldEVuc1Jlc29sdmVyID0gUmVhY3QudXNlQ2FsbGJhY2soIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvcihmdW5jdGlvbiogKGNvbmZpZykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIGNvbmZpZ18gPSBjb25maWcgIT09IG51bGwgJiYgY29uZmlnICE9PSB2b2lkIDAgPyBjb25maWcgOiB7XG4gICAgICAgICAgbmFtZVxuICAgICAgICB9O1xuICAgICAgICBpZiAoIWNvbmZpZ18ubmFtZSkgdGhyb3cgbmV3IEVycm9yKCduYW1lIGlzIHJlcXVpcmVkJyk7XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGVycm9yOiB1bmRlZmluZWQsXG4gICAgICAgICAgbG9hZGluZzogdHJ1ZVxuICAgICAgICB9KSk7XG4gICAgICAgIHZhciByZXNvbHZlciA9IHlpZWxkIHByb3ZpZGVyLmdldFJlc29sdmVyKGNvbmZpZ18ubmFtZSk7XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgIHJlc29sdmVyXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRhOiByZXNvbHZlcixcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkXG4gICAgICAgIH07XG4gICAgICB9IGNhdGNoIChlcnJvcl8pIHtcbiAgICAgICAgdmFyIGVycm9yID0gZXJyb3JfO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YTogdW5kZWZpbmVkLFxuICAgICAgICAgIGVycm9yXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7XG4gICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0oKSwgW25hbWUsIHByb3ZpZGVyXSk7IC8vIEZldGNoIGF2YXRhciB3aGVuIGRlcHMgb3IgY2hhaW4gY2hhbmdlc1xuXG4gIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHNraXAgfHwgIW5hbWUpIHJldHVybjtcbiAgICB2YXIgZGlkQ2FuY2VsID0gZmFsc2U7XG4gICAgaWYgKGRpZENhbmNlbCkgcmV0dXJuO1xuICAgIGdldEVuc1Jlc29sdmVyKHtcbiAgICAgIG5hbWVcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZGlkQ2FuY2VsID0gdHJ1ZTtcbiAgICB9O1xuICB9LCBbbmFtZSwgY2FjaGVCdXN0ZXIsIHNraXBdKTtcbiAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICByZXR1cm4gW3tcbiAgICBkYXRhOiBzdGF0ZS5yZXNvbHZlcixcbiAgICBsb2FkaW5nOiBzdGF0ZS5sb2FkaW5nLFxuICAgIGVycm9yOiBzdGF0ZS5lcnJvclxuICB9LCBnZXRFbnNSZXNvbHZlcl07XG59O1xuXG52YXIgdXNlQWNjb3VudCA9IGZ1bmN0aW9uIHVzZUFjY291bnQoKSB7XG4gIHZhciBfZ2xvYmFsU3RhdGUkZGF0YTtcblxuICB2YXIge1xuICAgIGZldGNoRW5zXG4gIH0gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICB2YXIge1xuICAgIHN0YXRlOiBnbG9iYWxTdGF0ZSxcbiAgICBzZXRTdGF0ZVxuICB9ID0gdXNlQ29udGV4dCgpO1xuICB2YXIgYWRkcmVzcyA9IChfZ2xvYmFsU3RhdGUkZGF0YSA9IGdsb2JhbFN0YXRlLmRhdGEpID09PSBudWxsIHx8IF9nbG9iYWxTdGF0ZSRkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZ2xvYmFsU3RhdGUkZGF0YS5hY2NvdW50O1xuICB2YXIgW3tcbiAgICBkYXRhOiBlbnMsXG4gICAgZXJyb3I6IGVuc0Vycm9yLFxuICAgIGxvYWRpbmc6IGVuc0xvYWRpbmdcbiAgfV0gPSB1c2VFbnNMb29rdXAoe1xuICAgIGFkZHJlc3MsXG4gICAgc2tpcDogIWZldGNoRW5zXG4gIH0pO1xuICB2YXIgW3tcbiAgICBkYXRhOiBhdmF0YXIsXG4gICAgZXJyb3I6IGF2YXRhckVycm9yLFxuICAgIGxvYWRpbmc6IGF2YXRhckxvYWRpbmdcbiAgfV0gPSB1c2VFbnNBdmF0YXIoe1xuICAgIGFkZHJlc3NPck5hbWU6IGVucyxcbiAgICBza2lwOiAhZmV0Y2hFbnMgfHwgIWVuc1xuICB9KTtcbiAgdmFyIGRpc2Nvbm5lY3QgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0U3RhdGUoeCA9PiB7XG4gICAgICB2YXIgX3gkY29ubmVjdG9yO1xuXG4gICAgICAoX3gkY29ubmVjdG9yID0geC5jb25uZWN0b3IpID09PSBudWxsIHx8IF94JGNvbm5lY3RvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3gkY29ubmVjdG9yLmRpc2Nvbm5lY3QoKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNhY2hlQnVzdGVyOiB4LmNhY2hlQnVzdGVyICsgMVxuICAgICAgfTtcbiAgICB9KTtcbiAgfSwgW3NldFN0YXRlXSk7XG4gIHZhciBlcnJvciA9IGVuc0Vycm9yIHx8IGF2YXRhckVycm9yO1xuICB2YXIgbG9hZGluZyA9IGVuc0xvYWRpbmcgfHwgYXZhdGFyTG9hZGluZztcbiAgcmV0dXJuIFt7XG4gICAgZGF0YTogYWRkcmVzcyA/IHtcbiAgICAgIGFkZHJlc3MsXG4gICAgICBjb25uZWN0b3I6IGdsb2JhbFN0YXRlLmNvbm5lY3RvcixcbiAgICAgIGVuczogZW5zID8ge1xuICAgICAgICBhdmF0YXIsXG4gICAgICAgIG5hbWU6IGVuc1xuICAgICAgfSA6IHVuZGVmaW5lZFxuICAgIH0gOiB1bmRlZmluZWQsXG4gICAgZXJyb3IsXG4gICAgbG9hZGluZ1xuICB9LCBkaXNjb25uZWN0XTtcbn07XG5cbnZhciBpbml0aWFsU3RhdGUkYiA9IHtcbiAgbG9hZGluZzogZmFsc2Vcbn07XG52YXIgdXNlQmxvY2tOdW1iZXIgPSBmdW5jdGlvbiB1c2VCbG9ja051bWJlcigpIHtcbiAgdmFyIHtcbiAgICBza2lwLFxuICAgIHdhdGNoXG4gIH0gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICB2YXIgcHJvdmlkZXIgPSB1c2VQcm92aWRlcigpO1xuICB2YXIgd2ViU29ja2V0UHJvdmlkZXIgPSB1c2VXZWJTb2NrZXRQcm92aWRlcigpO1xuICB2YXIgW3N0YXRlLCBzZXRTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShpbml0aWFsU3RhdGUkYik7XG4gIHZhciBnZXRCbG9ja051bWJlciA9IFJlYWN0LnVzZUNhbGxiYWNrKCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoZnVuY3Rpb24qICgpIHtcbiAgICB0cnkge1xuICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgIGVycm9yOiB1bmRlZmluZWQsXG4gICAgICAgIGxvYWRpbmc6IHRydWVcbiAgICAgIH0pKTtcbiAgICAgIHZhciBibG9ja051bWJlciA9IHlpZWxkIHByb3ZpZGVyLmdldEJsb2NrTnVtYmVyKCk7XG4gICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgYmxvY2tOdW1iZXIsXG4gICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICB9KSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkYXRhOiBibG9ja051bWJlcixcbiAgICAgICAgZXJyb3I6IHVuZGVmaW5lZFxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcl8pIHtcbiAgICAgIHZhciBlcnJvciA9IGVycm9yXztcbiAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICBlcnJvcixcbiAgICAgICAgbG9hZGluZzogZmFsc2VcbiAgICAgIH0pKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IHVuZGVmaW5lZCxcbiAgICAgICAgZXJyb3JcbiAgICAgIH07XG4gICAgfVxuICB9KSwgW3Byb3ZpZGVyXSk7XG4gIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHNraXApIHJldHVybjtcbiAgICB2YXIgZGlkQ2FuY2VsID0gZmFsc2U7XG4gICAgaWYgKGRpZENhbmNlbCkgcmV0dXJuO1xuICAgIGdldEJsb2NrTnVtYmVyKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRpZENhbmNlbCA9IHRydWU7XG4gICAgfTtcbiAgfSwgW3NraXBdKTtcbiAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghd2F0Y2gpIHJldHVybjtcblxuICAgIHZhciBsaXN0ZW5lciA9IGJsb2NrTnVtYmVyID0+IHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgYmxvY2tOdW1iZXJcbiAgICB9KSk7XG5cbiAgICB2YXIgcHJvdmlkZXJfID0gd2ViU29ja2V0UHJvdmlkZXIgIT09IG51bGwgJiYgd2ViU29ja2V0UHJvdmlkZXIgIT09IHZvaWQgMCA/IHdlYlNvY2tldFByb3ZpZGVyIDogcHJvdmlkZXI7XG4gICAgcHJvdmlkZXJfLm9uKCdibG9jaycsIGxpc3RlbmVyKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgcHJvdmlkZXJfLm9mZignYmxvY2snLCBsaXN0ZW5lcik7XG4gICAgfTtcbiAgfSwgW10pO1xuICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIHJldHVybiBbe1xuICAgIGRhdGE6IHN0YXRlLmJsb2NrTnVtYmVyLFxuICAgIGVycm9yOiBzdGF0ZS5lcnJvcixcbiAgICBsb2FkaW5nOiBzdGF0ZS5sb2FkaW5nXG4gIH0sIGdldEJsb2NrTnVtYmVyXTtcbn07XG5cbnZhciBpbml0aWFsU3RhdGUkYSA9IHtcbiAgbG9hZGluZzogZmFsc2Vcbn07XG52YXIgdXNlRmVlRGF0YSA9IGZ1bmN0aW9uIHVzZUZlZURhdGEoKSB7XG4gIHZhciB7XG4gICAgZm9ybWF0VW5pdHMgPSAnd2VpJyxcbiAgICBza2lwLFxuICAgIHdhdGNoXG4gIH0gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICB2YXIgcHJvdmlkZXIgPSB1c2VQcm92aWRlcigpO1xuICB2YXIgW3tcbiAgICBkYXRhOiBibG9ja051bWJlclxuICB9XSA9IHVzZUJsb2NrTnVtYmVyKHtcbiAgICBza2lwOiB0cnVlLFxuICAgIHdhdGNoXG4gIH0pO1xuICB2YXIgY2FjaGVCdXN0ZXIgPSB1c2VDYWNoZUJ1c3RlcigpO1xuICB2YXIgW3N0YXRlLCBzZXRTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShpbml0aWFsU3RhdGUkYSk7XG4gIHZhciBnZXRGZWVEYXRhID0gUmVhY3QudXNlQ2FsbGJhY2soIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvcihmdW5jdGlvbiogKCkge1xuICAgIHRyeSB7XG4gICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgbG9hZGluZzogdHJ1ZVxuICAgICAgfSkpO1xuICAgICAgdmFyIGZlZURhdGEgPSB5aWVsZCBwcm92aWRlci5nZXRGZWVEYXRhKCk7XG4gICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgZmVlRGF0YSxcbiAgICAgICAgbG9hZGluZzogZmFsc2VcbiAgICAgIH0pKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IGZlZURhdGEsXG4gICAgICAgIGVycm9yOiB1bmRlZmluZWRcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3JfKSB7XG4gICAgICB2YXIgZXJyb3IgPSBlcnJvcl87XG4gICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgZXJyb3IsXG4gICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICB9KSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgIGVycm9yXG4gICAgICB9O1xuICAgIH1cbiAgfSksIFtwcm92aWRlcl0pOyAvLyBGZXRjaCBmZWVEYXRhIG9uIG1vdW50IG9yIHdoZW4gY2hhaW4gY2hhbmdlc1xuXG4gIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHNraXApIHJldHVybjtcbiAgICB2YXIgZGlkQ2FuY2VsID0gZmFsc2U7XG4gICAgaWYgKGRpZENhbmNlbCkgcmV0dXJuO1xuICAgIGdldEZlZURhdGEoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZGlkQ2FuY2VsID0gdHJ1ZTtcbiAgICB9O1xuICB9LCBbY2FjaGVCdXN0ZXIsIHNraXBdKTtcbiAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghd2F0Y2gpIHJldHVybjtcbiAgICBpZiAoIWJsb2NrTnVtYmVyKSByZXR1cm47XG4gICAgZ2V0RmVlRGF0YSgpO1xuICB9LCBbYmxvY2tOdW1iZXJdKTtcbiAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICB2YXIgZm9ybWF0dGVkID0gc3RhdGUuZmVlRGF0YSA/IHtcbiAgICBnYXNQcmljZTogdXRpbHMuZm9ybWF0VW5pdHMoc3RhdGUuZmVlRGF0YS5nYXNQcmljZSwgZm9ybWF0VW5pdHMpLFxuICAgIG1heEZlZVBlckdhczogdXRpbHMuZm9ybWF0VW5pdHMoc3RhdGUuZmVlRGF0YS5tYXhGZWVQZXJHYXMsIGZvcm1hdFVuaXRzKSxcbiAgICBtYXhQcmlvcml0eUZlZVBlckdhczogdXRpbHMuZm9ybWF0VW5pdHMoc3RhdGUuZmVlRGF0YS5tYXhQcmlvcml0eUZlZVBlckdhcywgZm9ybWF0VW5pdHMpXG4gIH0gOiB1bmRlZmluZWQ7XG4gIHJldHVybiBbe1xuICAgIGRhdGE6IHN0YXRlLmZlZURhdGEgPyBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgc3RhdGUuZmVlRGF0YSksIHt9LCB7XG4gICAgICBmb3JtYXR0ZWRcbiAgICB9KSA6IHVuZGVmaW5lZCxcbiAgICBsb2FkaW5nOiBzdGF0ZS5sb2FkaW5nLFxuICAgIGVycm9yOiBzdGF0ZS5lcnJvclxuICB9LCBnZXRGZWVEYXRhXTtcbn07XG5cbnZhciBpbml0aWFsU3RhdGUkOSA9IHtcbiAgbG9hZGluZzogZmFsc2Vcbn07XG52YXIgdXNlQmFsYW5jZSA9IGZ1bmN0aW9uIHVzZUJhbGFuY2UoKSB7XG4gIHZhciB7XG4gICAgYWRkcmVzc09yTmFtZSxcbiAgICBmb3JtYXRVbml0cyA9ICdldGhlcicsXG4gICAgc2tpcCxcbiAgICB0b2tlbixcbiAgICB3YXRjaFxuICB9ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIHtcbiAgICBzdGF0ZToge1xuICAgICAgY29ubmVjdG9yXG4gICAgfVxuICB9ID0gdXNlQ29udGV4dCgpO1xuICB2YXIgY2FjaGVCdXN0ZXIgPSB1c2VDYWNoZUJ1c3RlcigpO1xuICB2YXIgcHJvdmlkZXIgPSB1c2VQcm92aWRlcigpO1xuICB2YXIgW3tcbiAgICBkYXRhOiBibG9ja051bWJlclxuICB9XSA9IHVzZUJsb2NrTnVtYmVyKHtcbiAgICBza2lwOiB0cnVlLFxuICAgIHdhdGNoXG4gIH0pO1xuICB2YXIgW3N0YXRlLCBzZXRTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShpbml0aWFsU3RhdGUkOSk7XG4gIHZhciBnZXRCYWxhbmNlID0gUmVhY3QudXNlQ2FsbGJhY2soIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvcihmdW5jdGlvbiogKGNvbmZpZykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIF9jb25maWdfJGZvcm1hdFVuaXRzO1xuXG4gICAgICAgIHZhciBjb25maWdfID0gY29uZmlnICE9PSBudWxsICYmIGNvbmZpZyAhPT0gdm9pZCAwID8gY29uZmlnIDoge1xuICAgICAgICAgIGFkZHJlc3NPck5hbWUsXG4gICAgICAgICAgZm9ybWF0VW5pdHMsXG4gICAgICAgICAgdG9rZW5cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKCFjb25maWdfLmFkZHJlc3NPck5hbWUpIHRocm93IG5ldyBFcnJvcignYWRkcmVzcyBpcyByZXF1aXJlZCcpO1xuICAgICAgICB2YXIgZm9ybWF0VW5pdHNfID0gKF9jb25maWdfJGZvcm1hdFVuaXRzID0gY29uZmlnXy5mb3JtYXRVbml0cykgIT09IG51bGwgJiYgX2NvbmZpZ18kZm9ybWF0VW5pdHMgIT09IHZvaWQgMCA/IF9jb25maWdfJGZvcm1hdFVuaXRzIDogJ2V0aGVyJztcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgICBsb2FkaW5nOiB0cnVlXG4gICAgICAgIH0pKTtcbiAgICAgICAgdmFyIGJhbGFuY2U7XG5cbiAgICAgICAgaWYgKGNvbmZpZ18udG9rZW4pIHtcbiAgICAgICAgICB2YXIgY29udHJhY3QgPSBuZXcgZXRoZXJzLkNvbnRyYWN0KGNvbmZpZ18udG9rZW4sIGVyYzIwQUJJLCBwcm92aWRlcik7XG4gICAgICAgICAgdmFyIHZhbHVlID0geWllbGQgY29udHJhY3QuYmFsYW5jZU9mKGNvbmZpZ18uYWRkcmVzc09yTmFtZSk7XG4gICAgICAgICAgdmFyIGRlY2ltYWxzID0geWllbGQgY29udHJhY3QuZGVjaW1hbHMoKTtcbiAgICAgICAgICB2YXIgc3ltYm9sID0geWllbGQgY29udHJhY3Quc3ltYm9sKCk7XG4gICAgICAgICAgYmFsYW5jZSA9IHtcbiAgICAgICAgICAgIGRlY2ltYWxzLFxuICAgICAgICAgICAgZm9ybWF0dGVkOiB1dGlscy5mb3JtYXRVbml0cyh2YWx1ZSwgZm9ybWF0VW5pdHNfKSxcbiAgICAgICAgICAgIHN5bWJvbCxcbiAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgX2Nvbm5lY3RvciRjaGFpbnMsIF9jaGFpbiRuYXRpdmVDdXJyZW5jeSwgX2NoYWluJG5hdGl2ZUN1cnJlbmN5MiwgX2NoYWluJG5hdGl2ZUN1cnJlbmN5MywgX2NoYWluJG5hdGl2ZUN1cnJlbmN5NDtcblxuICAgICAgICAgIHZhciBfdmFsdWUgPSB5aWVsZCBwcm92aWRlci5nZXRCYWxhbmNlKGNvbmZpZ18uYWRkcmVzc09yTmFtZSk7XG5cbiAgICAgICAgICB2YXIgY2hhaW4gPSBbLi4uKChfY29ubmVjdG9yJGNoYWlucyA9IGNvbm5lY3RvciA9PT0gbnVsbCB8fCBjb25uZWN0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbm5lY3Rvci5jaGFpbnMpICE9PSBudWxsICYmIF9jb25uZWN0b3IkY2hhaW5zICE9PSB2b2lkIDAgPyBfY29ubmVjdG9yJGNoYWlucyA6IFtdKSwgLi4uZGVmYXVsdENoYWlucywgLi4uZGVmYXVsdEwyQ2hhaW5zXS5maW5kKHggPT4geC5pZCA9PT0gcHJvdmlkZXIubmV0d29yay5jaGFpbklkKTtcbiAgICAgICAgICBiYWxhbmNlID0ge1xuICAgICAgICAgICAgZGVjaW1hbHM6IChfY2hhaW4kbmF0aXZlQ3VycmVuY3kgPSBjaGFpbiA9PT0gbnVsbCB8fCBjaGFpbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9jaGFpbiRuYXRpdmVDdXJyZW5jeTIgPSBjaGFpbi5uYXRpdmVDdXJyZW5jeSkgPT09IG51bGwgfHwgX2NoYWluJG5hdGl2ZUN1cnJlbmN5MiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2NoYWluJG5hdGl2ZUN1cnJlbmN5Mi5kZWNpbWFscykgIT09IG51bGwgJiYgX2NoYWluJG5hdGl2ZUN1cnJlbmN5ICE9PSB2b2lkIDAgPyBfY2hhaW4kbmF0aXZlQ3VycmVuY3kgOiAxOCxcbiAgICAgICAgICAgIGZvcm1hdHRlZDogdXRpbHMuZm9ybWF0VW5pdHMoX3ZhbHVlLCBmb3JtYXRVbml0c18pLFxuICAgICAgICAgICAgc3ltYm9sOiAoX2NoYWluJG5hdGl2ZUN1cnJlbmN5MyA9IGNoYWluID09PSBudWxsIHx8IGNoYWluID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2NoYWluJG5hdGl2ZUN1cnJlbmN5NCA9IGNoYWluLm5hdGl2ZUN1cnJlbmN5KSA9PT0gbnVsbCB8fCBfY2hhaW4kbmF0aXZlQ3VycmVuY3k0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfY2hhaW4kbmF0aXZlQ3VycmVuY3k0LnN5bWJvbCkgIT09IG51bGwgJiYgX2NoYWluJG5hdGl2ZUN1cnJlbmN5MyAhPT0gdm9pZCAwID8gX2NoYWluJG5hdGl2ZUN1cnJlbmN5MyA6ICdFVEgnLFxuICAgICAgICAgICAgdmFsdWU6IF92YWx1ZVxuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBiYWxhbmNlLFxuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRhOiBiYWxhbmNlLFxuICAgICAgICAgIGVycm9yOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yXykge1xuICAgICAgICB2YXIgZXJyb3IgPSBlcnJvcl87XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGVycm9yLFxuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgZXJyb3JcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfSgpLCBbYWRkcmVzc09yTmFtZSwgY29ubmVjdG9yLCBmb3JtYXRVbml0cywgcHJvdmlkZXIsIHRva2VuXSk7IC8vIEZldGNoIGJhbGFuY2Ugd2hlbiBkZXBzIG9yIGNoYWluIGNoYW5nZXNcblxuICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChza2lwIHx8ICFhZGRyZXNzT3JOYW1lKSByZXR1cm47XG4gICAgdmFyIGRpZENhbmNlbCA9IGZhbHNlO1xuICAgIGlmIChkaWRDYW5jZWwpIHJldHVybjtcbiAgICBnZXRCYWxhbmNlKHtcbiAgICAgIGFkZHJlc3NPck5hbWUsXG4gICAgICBmb3JtYXRVbml0cyxcbiAgICAgIHRva2VuXG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRpZENhbmNlbCA9IHRydWU7XG4gICAgfTtcbiAgfSwgW2FkZHJlc3NPck5hbWUsIGNhY2hlQnVzdGVyLCBza2lwLCB0b2tlbl0pO1xuICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF3YXRjaCkgcmV0dXJuO1xuICAgIGlmICghYmxvY2tOdW1iZXIpIHJldHVybjtcbiAgICBpZiAoIWFkZHJlc3NPck5hbWUpIHJldHVybjtcbiAgICBnZXRCYWxhbmNlKHtcbiAgICAgIGFkZHJlc3NPck5hbWUsXG4gICAgICBmb3JtYXRVbml0cyxcbiAgICAgIHRva2VuXG4gICAgfSk7XG4gIH0sIFtibG9ja051bWJlcl0pO1xuICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIHJldHVybiBbe1xuICAgIGRhdGE6IHN0YXRlLmJhbGFuY2UsXG4gICAgZXJyb3I6IHN0YXRlLmVycm9yLFxuICAgIGxvYWRpbmc6IHN0YXRlLmxvYWRpbmdcbiAgfSwgZ2V0QmFsYW5jZV07XG59O1xuXG52YXIgaW5pdGlhbFN0YXRlJDggPSB7XG4gIGxvYWRpbmc6IGZhbHNlXG59O1xudmFyIHVzZUNvbm5lY3QgPSAoKSA9PiB7XG4gIHZhciBfZ2xvYmFsU3RhdGUkZGF0YTtcblxuICB2YXIge1xuICAgIHN0YXRlOiBnbG9iYWxTdGF0ZSxcbiAgICBzZXRTdGF0ZTogc2V0R2xvYmFsU3RhdGUsXG4gICAgc2V0TGFzdFVzZWRDb25uZWN0b3JcbiAgfSA9IHVzZUNvbnRleHQoKTtcbiAgdmFyIFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoaW5pdGlhbFN0YXRlJDgpO1xuICB2YXIgY29ubmVjdCA9IFJlYWN0LnVzZUNhbGxiYWNrKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoZnVuY3Rpb24qIChjb25uZWN0b3IpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBhY3RpdmVDb25uZWN0b3IgPSBnbG9iYWxTdGF0ZSA9PT0gbnVsbCB8fCBnbG9iYWxTdGF0ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2xvYmFsU3RhdGUuY29ubmVjdG9yO1xuICAgICAgICBpZiAoY29ubmVjdG9yID09PSBhY3RpdmVDb25uZWN0b3IpIHRocm93IG5ldyBDb25uZWN0b3JBbHJlYWR5Q29ubmVjdGVkRXJyb3IoKTtcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgbG9hZGluZzogdHJ1ZSxcbiAgICAgICAgICBjb25uZWN0b3IsXG4gICAgICAgICAgZXJyb3I6IHVuZGVmaW5lZFxuICAgICAgICB9KSk7XG4gICAgICAgIHZhciBkYXRhID0geWllbGQgY29ubmVjdG9yLmNvbm5lY3QoKTsgLy8gVXBkYXRlIGNvbm5lY3RvciBnbG9iYWxseSBvbmx5IGFmdGVyIHN1Y2Nlc3NmdWwgY29ubmVjdGlvblxuXG4gICAgICAgIHNldEdsb2JhbFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGNvbm5lY3RvcixcbiAgICAgICAgICBkYXRhXG4gICAgICAgIH0pKTtcbiAgICAgICAgc2V0TGFzdFVzZWRDb25uZWN0b3IoY29ubmVjdG9yLm5hbWUpO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YSxcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkXG4gICAgICAgIH07XG4gICAgICB9IGNhdGNoIChlcnJvcl8pIHtcbiAgICAgICAgdmFyIGVycm9yID0gZXJyb3JfO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBjb25uZWN0b3I6IHVuZGVmaW5lZCxcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YTogdW5kZWZpbmVkLFxuICAgICAgICAgIGVycm9yXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7XG4gICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0oKSwgW2dsb2JhbFN0YXRlLmNvbm5lY3Rvciwgc2V0R2xvYmFsU3RhdGUsIHNldExhc3RVc2VkQ29ubmVjdG9yXSk7IC8vIEtlZXAgY29ubmVjdG9yIGluIHN5bmMgd2l0aCBnbG9iYWwgY29ubmVjdG9yXG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICB2YXIgZGlkQ2FuY2VsID0gZmFsc2U7XG4gICAgaWYgKGRpZENhbmNlbCkgcmV0dXJuO1xuICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgY29ubmVjdG9yOiBnbG9iYWxTdGF0ZS5jb25uZWN0b3IsXG4gICAgICBlcnJvcjogdW5kZWZpbmVkXG4gICAgfSkpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkaWRDYW5jZWwgPSB0cnVlO1xuICAgIH07XG4gIH0sIFtnbG9iYWxTdGF0ZS5jb25uZWN0b3JdKTtcbiAgcmV0dXJuIFt7XG4gICAgZGF0YToge1xuICAgICAgY29ubmVjdGVkOiAhISgoX2dsb2JhbFN0YXRlJGRhdGEgPSBnbG9iYWxTdGF0ZS5kYXRhKSAhPT0gbnVsbCAmJiBfZ2xvYmFsU3RhdGUkZGF0YSAhPT0gdm9pZCAwICYmIF9nbG9iYWxTdGF0ZSRkYXRhLmFjY291bnQpLFxuICAgICAgY29ubmVjdG9yOiBzdGF0ZS5jb25uZWN0b3IsXG4gICAgICBjb25uZWN0b3JzOiBnbG9iYWxTdGF0ZS5jb25uZWN0b3JzXG4gICAgfSxcbiAgICBlcnJvcjogc3RhdGUuZXJyb3IsXG4gICAgbG9hZGluZzogc3RhdGUubG9hZGluZyB8fCBnbG9iYWxTdGF0ZS5jb25uZWN0aW5nXG4gIH0sIGNvbm5lY3RdO1xufTtcblxudmFyIGluaXRpYWxTdGF0ZSQ3ID0ge1xuICBsb2FkaW5nOiBmYWxzZVxufTtcbnZhciB1c2VOZXR3b3JrID0gKCkgPT4ge1xuICB2YXIgX2RhdGEkY2hhaW4sIF9kYXRhJGNoYWluMiwgX2Nvbm5lY3RvciRjaGFpbnM7XG5cbiAgdmFyIHtcbiAgICBzdGF0ZToge1xuICAgICAgY29ubmVjdG9yLFxuICAgICAgZGF0YVxuICAgIH1cbiAgfSA9IHVzZUNvbnRleHQoKTtcbiAgdmFyIFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoaW5pdGlhbFN0YXRlJDcpO1xuICB2YXIgY2hhaW5JZCA9IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kYXRhJGNoYWluID0gZGF0YS5jaGFpbikgPT09IG51bGwgfHwgX2RhdGEkY2hhaW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRhJGNoYWluLmlkO1xuICB2YXIgdW5zdXBwb3J0ZWQgPSBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGF0YSRjaGFpbjIgPSBkYXRhLmNoYWluKSA9PT0gbnVsbCB8fCBfZGF0YSRjaGFpbjIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRhJGNoYWluMi51bnN1cHBvcnRlZDtcbiAgdmFyIGFjdGl2ZUNoYWlucyA9IChfY29ubmVjdG9yJGNoYWlucyA9IGNvbm5lY3RvciA9PT0gbnVsbCB8fCBjb25uZWN0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbm5lY3Rvci5jaGFpbnMpICE9PSBudWxsICYmIF9jb25uZWN0b3IkY2hhaW5zICE9PSB2b2lkIDAgPyBfY29ubmVjdG9yJGNoYWlucyA6IFtdO1xuICB2YXIgYWN0aXZlQ2hhaW4gPSBbLi4uYWN0aXZlQ2hhaW5zLCAuLi5hbGxDaGFpbnNdLmZpbmQoeCA9PiB4LmlkID09PSBjaGFpbklkKTtcbiAgdmFyIHN3aXRjaE5ldHdvcmsgPSBSZWFjdC51c2VDYWxsYmFjayggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKGZ1bmN0aW9uKiAoY2hhaW5JZCkge1xuICAgICAgaWYgKCEoY29ubmVjdG9yICE9PSBudWxsICYmIGNvbm5lY3RvciAhPT0gdm9pZCAwICYmIGNvbm5lY3Rvci5zd2l0Y2hDaGFpbikpIHJldHVybiB7XG4gICAgICAgIGRhdGE6IHVuZGVmaW5lZCxcbiAgICAgICAgZXJyb3I6IG5ldyBTd2l0Y2hDaGFpbkVycm9yKClcbiAgICAgIH07XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGVycm9yOiB1bmRlZmluZWQsXG4gICAgICAgICAgbG9hZGluZzogdHJ1ZVxuICAgICAgICB9KSk7XG4gICAgICAgIHZhciBjaGFpbiA9IHlpZWxkIGNvbm5lY3Rvci5zd2l0Y2hDaGFpbihjaGFpbklkKTtcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgbG9hZGluZzogZmFsc2VcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGE6IGNoYWluLFxuICAgICAgICAgIGVycm9yOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yXykge1xuICAgICAgICB2YXIgZXJyb3IgPSBlcnJvcl87XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGVycm9yLFxuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgZXJyb3JcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfSgpLCBbY29ubmVjdG9yXSk7XG4gIHJldHVybiBbe1xuICAgIGRhdGE6IHtcbiAgICAgIGNoYWluOiBjaGFpbklkID8gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIGFjdGl2ZUNoYWluKSwge30sIHtcbiAgICAgICAgaWQ6IGNoYWluSWQsXG4gICAgICAgIHVuc3VwcG9ydGVkXG4gICAgICB9KSA6IHVuZGVmaW5lZCxcbiAgICAgIGNoYWluczogYWN0aXZlQ2hhaW5zXG4gICAgfSxcbiAgICBlcnJvcjogc3RhdGUuZXJyb3IsXG4gICAgbG9hZGluZzogc3RhdGUubG9hZGluZ1xuICB9LCBjb25uZWN0b3IgIT09IG51bGwgJiYgY29ubmVjdG9yICE9PSB2b2lkIDAgJiYgY29ubmVjdG9yLnN3aXRjaENoYWluID8gc3dpdGNoTmV0d29yayA6IHVuZGVmaW5lZF07XG59O1xuXG52YXIgaW5pdGlhbFN0YXRlJDYgPSB7XG4gIGRhdGE6IHVuZGVmaW5lZCxcbiAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgbG9hZGluZzogZmFsc2Vcbn07XG52YXIgdXNlU2lnbmVyID0gZnVuY3Rpb24gdXNlU2lnbmVyKCkge1xuICB2YXIge1xuICAgIHNraXBcbiAgfSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBjYWNoZUJ1c3RlciA9IHVzZUNhY2hlQnVzdGVyKCk7XG4gIHZhciB7XG4gICAgc3RhdGU6IHtcbiAgICAgIGNvbm5lY3RvclxuICAgIH1cbiAgfSA9IHVzZUNvbnRleHQoKTtcbiAgdmFyIFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoaW5pdGlhbFN0YXRlJDYpO1xuICB2YXIgZ2V0U2lnbmVyID0gUmVhY3QudXNlQ2FsbGJhY2soIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvcihmdW5jdGlvbiogKCkge1xuICAgIHRyeSB7XG4gICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgbG9hZGluZzogdHJ1ZVxuICAgICAgfSkpO1xuICAgICAgdmFyIHNpZ25lciA9IHlpZWxkIGNvbm5lY3RvciA9PT0gbnVsbCB8fCBjb25uZWN0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbm5lY3Rvci5nZXRTaWduZXIoKTtcbiAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICBkYXRhOiBzaWduZXIsXG4gICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICB9KSk7XG4gICAgICByZXR1cm4gc2lnbmVyO1xuICAgIH0gY2F0Y2ggKGVycm9yXykge1xuICAgICAgdmFyIGVycm9yID0gZXJyb3JfO1xuICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgIGRhdGE6IHVuZGVmaW5lZCxcbiAgICAgICAgZXJyb3IsXG4gICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICB9KSk7XG4gICAgfVxuICB9KSwgW2Nvbm5lY3Rvcl0pO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChza2lwKSByZXR1cm47XG4gICAgdmFyIGRpZENhbmNlbCA9IGZhbHNlO1xuICAgIGlmIChkaWRDYW5jZWwpIHJldHVybjtcbiAgICBnZXRTaWduZXIoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZGlkQ2FuY2VsID0gdHJ1ZTtcbiAgICB9O1xuICB9LCBbY2FjaGVCdXN0ZXIsIGNvbm5lY3RvciwgZ2V0U2lnbmVyLCBza2lwXSk7XG4gIHJldHVybiBbc3RhdGUsIGdldFNpZ25lcl07XG59O1xuXG52YXIgaW5pdGlhbFN0YXRlJDUgPSB7XG4gIGxvYWRpbmc6IGZhbHNlXG59O1xudmFyIHVzZVNpZ25NZXNzYWdlID0gZnVuY3Rpb24gdXNlU2lnbk1lc3NhZ2UoKSB7XG4gIHZhciB7XG4gICAgbWVzc2FnZVxuICB9ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIHtcbiAgICBzdGF0ZToge1xuICAgICAgY29ubmVjdG9yXG4gICAgfVxuICB9ID0gdXNlQ29udGV4dCgpO1xuICB2YXIgW3N0YXRlLCBzZXRTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShpbml0aWFsU3RhdGUkNSk7XG4gIHZhciBzaWduTWVzc2FnZSA9IFJlYWN0LnVzZUNhbGxiYWNrKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoZnVuY3Rpb24qIChjb25maWcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBjb25maWdfID0gY29uZmlnICE9PSBudWxsICYmIGNvbmZpZyAhPT0gdm9pZCAwID8gY29uZmlnIDoge1xuICAgICAgICAgIG1lc3NhZ2VcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKCFjb25maWdfLm1lc3NhZ2UpIHRocm93IG5ldyBFcnJvcignbWVzc2FnZSBpcyByZXF1aXJlZCcpO1xuICAgICAgICBpZiAoIWNvbm5lY3RvcikgdGhyb3cgbmV3IENvbm5lY3Rvck5vdEZvdW5kRXJyb3IoKTtcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgICBsb2FkaW5nOiB0cnVlXG4gICAgICAgIH0pKTtcbiAgICAgICAgdmFyIHNpZ25lciA9IHlpZWxkIGNvbm5lY3Rvci5nZXRTaWduZXIoKTtcbiAgICAgICAgdmFyIHNpZ25hdHVyZSA9IHlpZWxkIHNpZ25lci5zaWduTWVzc2FnZShjb25maWdfLm1lc3NhZ2UpO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBzaWduYXR1cmUsXG4gICAgICAgICAgbG9hZGluZzogZmFsc2VcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGE6IHNpZ25hdHVyZSxcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkXG4gICAgICAgIH07XG4gICAgICB9IGNhdGNoIChlcnJvcl8pIHtcbiAgICAgICAgdmFyIGVycm9yID0gZXJyb3JfO1xuICAgICAgICBpZiAoZXJyb3JfLmNvZGUgPT09IDQwMDEpIGVycm9yID0gbmV3IFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvcigpO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YTogdW5kZWZpbmVkLFxuICAgICAgICAgIGVycm9yXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7XG4gICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0oKSwgW2Nvbm5lY3RvciwgbWVzc2FnZV0pO1xuICByZXR1cm4gW3tcbiAgICBkYXRhOiBzdGF0ZS5zaWduYXR1cmUsXG4gICAgZXJyb3I6IHN0YXRlLmVycm9yLFxuICAgIGxvYWRpbmc6IHN0YXRlLmxvYWRpbmdcbiAgfSwgc2lnbk1lc3NhZ2VdO1xufTtcblxudmFyIGdldENvbnRyYWN0ID0gX3JlZiA9PiB7XG4gIHZhciB7XG4gICAgYWRkcmVzc09yTmFtZSxcbiAgICBjb250cmFjdEludGVyZmFjZSxcbiAgICBzaWduZXJPclByb3ZpZGVyXG4gIH0gPSBfcmVmO1xuICByZXR1cm4gbmV3IENvbnRyYWN0KGFkZHJlc3NPck5hbWUsIGNvbnRyYWN0SW50ZXJmYWNlLCBzaWduZXJPclByb3ZpZGVyKTtcbn07XG5cbnZhciB1c2VDb250cmFjdCA9IF9yZWYyID0+IHtcbiAgdmFyIHtcbiAgICBhZGRyZXNzT3JOYW1lLFxuICAgIGNvbnRyYWN0SW50ZXJmYWNlLFxuICAgIHNpZ25lck9yUHJvdmlkZXJcbiAgfSA9IF9yZWYyO1xuICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIGdldENvbnRyYWN0KHtcbiAgICAgIGFkZHJlc3NPck5hbWUsXG4gICAgICBjb250cmFjdEludGVyZmFjZSxcbiAgICAgIHNpZ25lck9yUHJvdmlkZXJcbiAgICB9KTtcbiAgfSwgW2FkZHJlc3NPck5hbWUsIGNvbnRyYWN0SW50ZXJmYWNlLCBzaWduZXJPclByb3ZpZGVyXSk7XG59O1xuXG52YXIgdXNlQ29udHJhY3RFdmVudCA9IGZ1bmN0aW9uIHVzZUNvbnRyYWN0RXZlbnQoY29udHJhY3RDb25maWcsIGV2ZW50TmFtZSwgbGlzdGVuZXIpIHtcbiAgdmFyIHtcbiAgICBvbmNlXG4gIH0gPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9O1xuICB2YXIgcHJvdmlkZXIgPSB1c2VQcm92aWRlcigpO1xuICB2YXIgd2ViU29ja2V0UHJvdmlkZXIgPSB1c2VXZWJTb2NrZXRQcm92aWRlcigpO1xuICB2YXIgY29udHJhY3QgPSB1c2VDb250cmFjdChfb2JqZWN0U3ByZWFkMih7XG4gICAgc2lnbmVyT3JQcm92aWRlcjogd2ViU29ja2V0UHJvdmlkZXIgIT09IG51bGwgJiYgd2ViU29ja2V0UHJvdmlkZXIgIT09IHZvaWQgMCA/IHdlYlNvY2tldFByb3ZpZGVyIDogcHJvdmlkZXJcbiAgfSwgY29udHJhY3RDb25maWcpKTtcbiAgdmFyIGxpc3RlbmVyUmVmID0gUmVhY3QudXNlUmVmKGxpc3RlbmVyKTtcbiAgbGlzdGVuZXJSZWYuY3VycmVudCA9IGxpc3RlbmVyO1xuICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHZhciBoYW5kbGVyID0gZnVuY3Rpb24gaGFuZGxlcigpIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBldmVudCA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgZXZlbnRbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBsaXN0ZW5lclJlZi5jdXJyZW50KGV2ZW50KTtcbiAgICB9O1xuXG4gICAgdmFyIGNvbnRyYWN0XyA9IGNvbnRyYWN0O1xuICAgIGlmIChvbmNlKSBjb250cmFjdF8ub25jZShldmVudE5hbWUsIGhhbmRsZXIpO2Vsc2UgY29udHJhY3RfLm9uKGV2ZW50TmFtZSwgaGFuZGxlcik7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNvbnRyYWN0Xy5vZmYoZXZlbnROYW1lLCBoYW5kbGVyKTtcbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9LCBbY29udHJhY3QsIGV2ZW50TmFtZV0pO1xuICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xufTtcblxudmFyIGluaXRpYWxTdGF0ZSQ0ID0ge1xuICBsb2FkaW5nOiBmYWxzZVxufTtcbnZhciB1c2VDb250cmFjdFJlYWQgPSBmdW5jdGlvbiB1c2VDb250cmFjdFJlYWQoY29udHJhY3RDb25maWcsIGZ1bmN0aW9uTmFtZSkge1xuICB2YXIge1xuICAgIGFyZ3MsXG4gICAgb3ZlcnJpZGVzLFxuICAgIHNraXAsXG4gICAgd2F0Y2hcbiAgfSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gIHZhciBwcm92aWRlciA9IHVzZVByb3ZpZGVyKCk7XG4gIHZhciBjb250cmFjdCA9IHVzZUNvbnRyYWN0KF9vYmplY3RTcHJlYWQyKHtcbiAgICBzaWduZXJPclByb3ZpZGVyOiBwcm92aWRlclxuICB9LCBjb250cmFjdENvbmZpZykpO1xuICB2YXIgW3tcbiAgICBkYXRhOiBibG9ja051bWJlclxuICB9XSA9IHVzZUJsb2NrTnVtYmVyKHtcbiAgICBza2lwOiB0cnVlLFxuICAgIHdhdGNoXG4gIH0pO1xuICB2YXIgW3N0YXRlLCBzZXRTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShpbml0aWFsU3RhdGUkNCk7XG4gIHZhciByZWFkID0gUmVhY3QudXNlQ2FsbGJhY2soIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvcihmdW5jdGlvbiogKGNvbmZpZykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIGNvbmZpZ18gPSBjb25maWcgIT09IG51bGwgJiYgY29uZmlnICE9PSB2b2lkIDAgPyBjb25maWcgOiB7XG4gICAgICAgICAgYXJncyxcbiAgICAgICAgICBvdmVycmlkZXNcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHBhcmFtcyA9IFsuLi4oQXJyYXkuaXNBcnJheShjb25maWdfLmFyZ3MpID8gY29uZmlnXy5hcmdzIDogY29uZmlnXy5hcmdzID8gW2NvbmZpZ18uYXJnc10gOiBbXSksIC4uLihjb25maWdfLm92ZXJyaWRlcyA/IFtjb25maWdfLm92ZXJyaWRlc10gOiBbXSldO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkLFxuICAgICAgICAgIGxvYWRpbmc6IHRydWUsXG4gICAgICAgICAgcmVzcG9uc2U6IHVuZGVmaW5lZFxuICAgICAgICB9KSk7XG4gICAgICAgIHZhciByZXNwb25zZSA9IHlpZWxkIGNvbnRyYWN0W2Z1bmN0aW9uTmFtZV0oLi4ucGFyYW1zKTtcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgcmVzcG9uc2VcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLFxuICAgICAgICAgIGVycm9yOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yXykge1xuICAgICAgICB2YXIgZXJyb3IgPSBlcnJvcl87XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGVycm9yLFxuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgZXJyb3JcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfSgpLCBbYXJncywgY29udHJhY3QsIGZ1bmN0aW9uTmFtZSwgb3ZlcnJpZGVzXSk7XG4gIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHNraXApIHJldHVybjtcbiAgICB2YXIgZGlkQ2FuY2VsID0gZmFsc2U7XG4gICAgaWYgKGRpZENhbmNlbCkgcmV0dXJuO1xuICAgIHJlYWQoe1xuICAgICAgYXJncyxcbiAgICAgIG92ZXJyaWRlc1xuICAgIH0pO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkaWRDYW5jZWwgPSB0cnVlO1xuICAgIH07XG4gIH0sIFthcmdzLCBvdmVycmlkZXMsIHNraXBdKTtcbiAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghd2F0Y2gpIHJldHVybjtcbiAgICBpZiAoIWJsb2NrTnVtYmVyKSByZXR1cm47XG4gICAgcmVhZCh7XG4gICAgICBhcmdzLFxuICAgICAgb3ZlcnJpZGVzXG4gICAgfSk7XG4gIH0sIFtibG9ja051bWJlcl0pO1xuICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIHJldHVybiBbe1xuICAgIGRhdGE6IHN0YXRlLnJlc3BvbnNlLFxuICAgIGVycm9yOiBzdGF0ZS5lcnJvcixcbiAgICBsb2FkaW5nOiBzdGF0ZS5sb2FkaW5nXG4gIH0sIHJlYWRdO1xufTtcblxudmFyIGluaXRpYWxTdGF0ZSQzID0ge1xuICBsb2FkaW5nOiBmYWxzZVxufTtcbnZhciB1c2VDb250cmFjdFdyaXRlID0gZnVuY3Rpb24gdXNlQ29udHJhY3RXcml0ZShjb250cmFjdENvbmZpZywgZnVuY3Rpb25OYW1lKSB7XG4gIHZhciB7XG4gICAgYXJncyxcbiAgICBvdmVycmlkZXNcbiAgfSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gIHZhciB7XG4gICAgc3RhdGU6IHtcbiAgICAgIGNvbm5lY3RvclxuICAgIH1cbiAgfSA9IHVzZUNvbnRleHQoKTtcbiAgdmFyIGNvbnRyYWN0ID0gdXNlQ29udHJhY3QoY29udHJhY3RDb25maWcpO1xuICB2YXIgW3N0YXRlLCBzZXRTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShpbml0aWFsU3RhdGUkMyk7XG4gIHZhciB3cml0ZSA9IFJlYWN0LnVzZUNhbGxiYWNrKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoZnVuY3Rpb24qIChjb25maWcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBjb25maWdfID0gY29uZmlnICE9PSBudWxsICYmIGNvbmZpZyAhPT0gdm9pZCAwID8gY29uZmlnIDoge1xuICAgICAgICAgIGFyZ3MsXG4gICAgICAgICAgb3ZlcnJpZGVzXG4gICAgICAgIH07XG4gICAgICAgIGlmICghY29ubmVjdG9yKSB0aHJvdyBuZXcgQ29ubmVjdG9yTm90Rm91bmRFcnJvcigpO1xuICAgICAgICB2YXIgcGFyYW1zID0gWy4uLihBcnJheS5pc0FycmF5KGNvbmZpZ18uYXJncykgPyBjb25maWdfLmFyZ3MgOiBjb25maWdfLmFyZ3MgPyBbY29uZmlnXy5hcmdzXSA6IFtdKSwgLi4uKGNvbmZpZ18ub3ZlcnJpZGVzID8gW2NvbmZpZ18ub3ZlcnJpZGVzXSA6IFtdKV07XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGVycm9yOiB1bmRlZmluZWQsXG4gICAgICAgICAgbG9hZGluZzogdHJ1ZSxcbiAgICAgICAgICByZXNwb25zZTogdW5kZWZpbmVkXG4gICAgICAgIH0pKTtcbiAgICAgICAgdmFyIHNpZ25lciA9IHlpZWxkIGNvbm5lY3Rvci5nZXRTaWduZXIoKTtcbiAgICAgICAgdmFyIGNvbnRyYWN0XyA9IGNvbnRyYWN0LmNvbm5lY3Qoc2lnbmVyKTtcbiAgICAgICAgdmFyIHJlc3BvbnNlID0geWllbGQgY29udHJhY3RfW2Z1bmN0aW9uTmFtZV0oLi4ucGFyYW1zKTtcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgcmVzcG9uc2VcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLFxuICAgICAgICAgIGVycm9yOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yXykge1xuICAgICAgICB2YXIgZXJyb3IgPSBlcnJvcl87XG4gICAgICAgIGlmIChlcnJvcl8uY29kZSA9PT0gNDAwMSkgZXJyb3IgPSBuZXcgVXNlclJlamVjdGVkUmVxdWVzdEVycm9yKCk7XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGVycm9yLFxuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgZXJyb3JcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfSgpLCBbYXJncywgY29ubmVjdG9yLCBjb250cmFjdCwgZnVuY3Rpb25OYW1lLCBvdmVycmlkZXNdKTtcbiAgcmV0dXJuIFt7XG4gICAgZGF0YTogc3RhdGUucmVzcG9uc2UsXG4gICAgZXJyb3I6IHN0YXRlLmVycm9yLFxuICAgIGxvYWRpbmc6IHN0YXRlLmxvYWRpbmdcbiAgfSwgd3JpdGVdO1xufTtcblxudmFyIGluaXRpYWxTdGF0ZSQyID0ge1xuICBsb2FkaW5nOiBmYWxzZVxufTtcbnZhciB1c2VUb2tlbiA9IGZ1bmN0aW9uIHVzZVRva2VuKCkge1xuICB2YXIge1xuICAgIGFkZHJlc3MsXG4gICAgZm9ybWF0VW5pdHMgPSAnZXRoZXInLFxuICAgIHNraXBcbiAgfSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciB7XG4gICAgc3RhdGU6IHtcbiAgICAgIGNvbm5lY3RvclxuICAgIH1cbiAgfSA9IHVzZUNvbnRleHQoKTtcbiAgdmFyIHByb3ZpZGVyID0gdXNlUHJvdmlkZXIoKTtcbiAgdmFyIFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoaW5pdGlhbFN0YXRlJDIpO1xuICB2YXIgZ2V0VG9rZW4gPSBSZWFjdC51c2VDYWxsYmFjayggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKGZ1bmN0aW9uKiAoY29uZmlnKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgX2NvbmZpZ18kZm9ybWF0VW5pdHM7XG5cbiAgICAgICAgdmFyIGNvbmZpZ18gPSBjb25maWcgIT09IG51bGwgJiYgY29uZmlnICE9PSB2b2lkIDAgPyBjb25maWcgOiB7XG4gICAgICAgICAgYWRkcmVzcyxcbiAgICAgICAgICBmb3JtYXRVbml0c1xuICAgICAgICB9O1xuICAgICAgICBpZiAoIWNvbmZpZ18uYWRkcmVzcykgdGhyb3cgbmV3IEVycm9yKCdhZGRyZXNzIGlzIHJlcXVpcmVkJyk7XG4gICAgICAgIHZhciBjb250cmFjdCA9IG5ldyBldGhlcnMuQ29udHJhY3QoY29uZmlnXy5hZGRyZXNzLCBlcmMyMEFCSSwgcHJvdmlkZXIpO1xuICAgICAgICB2YXIgZm9ybWF0VW5pdHNfID0gKF9jb25maWdfJGZvcm1hdFVuaXRzID0gY29uZmlnXy5mb3JtYXRVbml0cykgIT09IG51bGwgJiYgX2NvbmZpZ18kZm9ybWF0VW5pdHMgIT09IHZvaWQgMCA/IF9jb25maWdfJGZvcm1hdFVuaXRzIDogJ2V0aGVyJztcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgICBsb2FkaW5nOiB0cnVlXG4gICAgICAgIH0pKTtcbiAgICAgICAgdmFyIHN5bWJvbCA9IHlpZWxkIGNvbnRyYWN0LnN5bWJvbCgpO1xuICAgICAgICB2YXIgZGVjaW1hbHMgPSB5aWVsZCBjb250cmFjdC5kZWNpbWFscygpO1xuICAgICAgICB2YXIgdG90YWxTdXBwbHkgPSB5aWVsZCBjb250cmFjdC50b3RhbFN1cHBseSgpO1xuICAgICAgICB2YXIgdG9rZW4gPSB7XG4gICAgICAgICAgYWRkcmVzczogY29uZmlnXy5hZGRyZXNzLFxuICAgICAgICAgIGRlY2ltYWxzLFxuICAgICAgICAgIHN5bWJvbCxcbiAgICAgICAgICB0b3RhbFN1cHBseToge1xuICAgICAgICAgICAgZm9ybWF0dGVkOiB1dGlscy5mb3JtYXRVbml0cyh0b3RhbFN1cHBseSwgZm9ybWF0VW5pdHNfKSxcbiAgICAgICAgICAgIHZhbHVlOiB0b3RhbFN1cHBseVxuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgdG9rZW4sXG4gICAgICAgICAgbG9hZGluZzogZmFsc2VcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGE6IHRva2VuLFxuICAgICAgICAgIGVycm9yOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yXykge1xuICAgICAgICB2YXIgZXJyb3IgPSBlcnJvcl87XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGVycm9yLFxuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgZXJyb3JcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfSgpLCBbYWRkcmVzcywgZm9ybWF0VW5pdHMsIHByb3ZpZGVyXSk7XG4gIHZhciB3YXRjaFRva2VuID0gUmVhY3QudXNlQ2FsbGJhY2soIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoZnVuY3Rpb24qICh0b2tlbikge1xuICAgICAgaWYgKCEoY29ubmVjdG9yICE9PSBudWxsICYmIGNvbm5lY3RvciAhPT0gdm9pZCAwICYmIGNvbm5lY3Rvci53YXRjaEFzc2V0KSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICB0cnkge1xuICAgICAgICB5aWVsZCBjb25uZWN0b3Iud2F0Y2hBc3NldCh0b2tlbik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChfeDIpIHtcbiAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0oKSwgW2Nvbm5lY3Rvcl0pO1xuICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChza2lwIHx8ICFhZGRyZXNzKSByZXR1cm47XG4gICAgdmFyIGRpZENhbmNlbCA9IGZhbHNlO1xuICAgIGlmIChkaWRDYW5jZWwpIHJldHVybjtcbiAgICBnZXRUb2tlbih7XG4gICAgICBhZGRyZXNzLFxuICAgICAgZm9ybWF0VW5pdHNcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZGlkQ2FuY2VsID0gdHJ1ZTtcbiAgICB9O1xuICB9LCBbYWRkcmVzcywgc2tpcF0pO1xuICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuXG4gIHJldHVybiBbe1xuICAgIGRhdGE6IHN0YXRlLnRva2VuID8gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHN0YXRlLnRva2VuKSwge30sIHtcbiAgICAgIGFkZHJlc3NcbiAgICB9KSA6IHVuZGVmaW5lZCxcbiAgICBlcnJvcjogc3RhdGUuZXJyb3IsXG4gICAgbG9hZGluZzogc3RhdGUubG9hZGluZ1xuICB9LCB3YXRjaFRva2VuLCBnZXRUb2tlbl07XG59O1xuXG52YXIgaW5pdGlhbFN0YXRlJDEgPSB7XG4gIGxvYWRpbmc6IGZhbHNlXG59O1xudmFyIHVzZVRyYW5zYWN0aW9uID0gZnVuY3Rpb24gdXNlVHJhbnNhY3Rpb24oKSB7XG4gIHZhciB7XG4gICAgcmVxdWVzdFxuICB9ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIHtcbiAgICBzdGF0ZToge1xuICAgICAgY29ubmVjdG9yXG4gICAgfVxuICB9ID0gdXNlQ29udGV4dCgpO1xuICB2YXIgW3N0YXRlLCBzZXRTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShpbml0aWFsU3RhdGUkMSk7XG4gIHZhciBzZW5kVHJhbnNhY3Rpb24gPSBSZWFjdC51c2VDYWxsYmFjayggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKGZ1bmN0aW9uKiAoY29uZmlnKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgY29uZmlnXyA9IGNvbmZpZyAhPT0gbnVsbCAmJiBjb25maWcgIT09IHZvaWQgMCA/IGNvbmZpZyA6IHtcbiAgICAgICAgICByZXF1ZXN0XG4gICAgICAgIH07XG4gICAgICAgIGlmICghY29uZmlnXy5yZXF1ZXN0KSB0aHJvdyBuZXcgRXJyb3IoJ3JlcXVlc3QgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgaWYgKCFjb25uZWN0b3IpIHRocm93IG5ldyBDb25uZWN0b3JOb3RGb3VuZEVycm9yKCk7XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGxvYWRpbmc6IHRydWVcbiAgICAgICAgfSkpO1xuICAgICAgICB2YXIgc2lnbmVyID0geWllbGQgY29ubmVjdG9yLmdldFNpZ25lcigpO1xuICAgICAgICB2YXIgdHJhbnNhY3Rpb24gPSB5aWVsZCBzaWduZXIuc2VuZFRyYW5zYWN0aW9uKGNvbmZpZ18ucmVxdWVzdCk7XG4gICAgICAgIHNldFN0YXRlKHggPT4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHgpLCB7fSwge1xuICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgIHRyYW5zYWN0aW9uXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRhOiB0cmFuc2FjdGlvbixcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkXG4gICAgICAgIH07XG4gICAgICB9IGNhdGNoIChlcnJvcl8pIHtcbiAgICAgICAgdmFyIGVycm9yID0gZXJyb3JfO1xuICAgICAgICBpZiAoZXJyb3JfLmNvZGUgPT09IDQwMDEpIGVycm9yID0gbmV3IFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvcigpO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YTogdW5kZWZpbmVkLFxuICAgICAgICAgIGVycm9yXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7XG4gICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0oKSwgW2Nvbm5lY3RvciwgcmVxdWVzdF0pO1xuICByZXR1cm4gW3tcbiAgICBkYXRhOiBzdGF0ZS50cmFuc2FjdGlvbixcbiAgICBlcnJvcjogc3RhdGUuZXJyb3IsXG4gICAgbG9hZGluZzogc3RhdGUubG9hZGluZ1xuICB9LCBzZW5kVHJhbnNhY3Rpb25dO1xufTtcblxudmFyIGluaXRpYWxTdGF0ZSA9IHtcbiAgbG9hZGluZzogZmFsc2Vcbn07XG52YXIgdXNlV2FpdEZvclRyYW5zYWN0aW9uID0gZnVuY3Rpb24gdXNlV2FpdEZvclRyYW5zYWN0aW9uKCkge1xuICB2YXIge1xuICAgIGNvbmZpcm1hdGlvbnMsXG4gICAgaGFzaCxcbiAgICBza2lwLFxuICAgIHRpbWVvdXQsXG4gICAgd2FpdDogd2FpdF9cbiAgfSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBwcm92aWRlciA9IHVzZVByb3ZpZGVyKCk7XG4gIHZhciBbc3RhdGUsIHNldFN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGluaXRpYWxTdGF0ZSk7XG4gIHZhciB3YWl0ID0gUmVhY3QudXNlQ2FsbGJhY2soIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvcihmdW5jdGlvbiogKGNvbmZpZykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIGNvbmZpZ18gPSBjb25maWcgIT09IG51bGwgJiYgY29uZmlnICE9PSB2b2lkIDAgPyBjb25maWcgOiB7XG4gICAgICAgICAgY29uZmlybWF0aW9ucyxcbiAgICAgICAgICBoYXNoLFxuICAgICAgICAgIHRpbWVvdXQsXG4gICAgICAgICAgd2FpdDogd2FpdF9cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKCFjb25maWdfLmhhc2ggJiYgIWNvbmZpZ18ud2FpdCkgdGhyb3cgbmV3IEVycm9yKCdoYXNoIG9yIHdhaXQgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgdmFyIHByb21pc2U7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB0ZXN0aW5nLWxpYnJhcnkvYXdhaXQtYXN5bmMtdXRpbHNcblxuICAgICAgICBpZiAoY29uZmlnXy53YWl0KSBwcm9taXNlID0gY29uZmlnXy53YWl0KGNvbmZpZ18uY29uZmlybWF0aW9ucyk7ZWxzZSBpZiAoY29uZmlnXy5oYXNoKSBwcm9taXNlID0gcHJvdmlkZXIud2FpdEZvclRyYW5zYWN0aW9uKGNvbmZpZ18uaGFzaCwgY29uZmlnXy5jb25maXJtYXRpb25zLCBjb25maWdfLnRpbWVvdXQpO2Vsc2UgdGhyb3cgbmV3IEVycm9yKCdoYXNoIG9yIHdhaXQgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgbG9hZGluZzogdHJ1ZVxuICAgICAgICB9KSk7XG4gICAgICAgIHZhciByZWNlaXB0ID0geWllbGQgcHJvbWlzZTtcbiAgICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgcmVjZWlwdFxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YTogcmVjZWlwdCxcbiAgICAgICAgICBlcnJvcjogdW5kZWZpbmVkXG4gICAgICAgIH07XG4gICAgICB9IGNhdGNoIChlcnJvcl8pIHtcbiAgICAgICAgdmFyIGVycm9yID0gZXJyb3JfO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YTogdW5kZWZpbmVkLFxuICAgICAgICAgIGVycm9yXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7XG4gICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0oKSwgW3dhaXRfLCBjb25maXJtYXRpb25zLCBoYXNoLCB0aW1lb3V0LCBwcm92aWRlcl0pOyAvLyBGZXRjaCBiYWxhbmNlIHdoZW4gZGVwcyBvciBjaGFpbiBjaGFuZ2VzXG5cbiAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc2tpcCB8fCAhaGFzaCAmJiAhd2FpdF8pIHJldHVybjtcbiAgICB2YXIgZGlkQ2FuY2VsID0gZmFsc2U7XG4gICAgaWYgKGRpZENhbmNlbCkgcmV0dXJuOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdGVzdGluZy1saWJyYXJ5L2F3YWl0LWFzeW5jLXV0aWxzXG5cbiAgICB3YWl0KHtcbiAgICAgIGNvbmZpcm1hdGlvbnMsXG4gICAgICBoYXNoLFxuICAgICAgdGltZW91dCxcbiAgICAgIHdhaXQ6IHdhaXRfXG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRpZENhbmNlbCA9IHRydWU7XG4gICAgfTtcbiAgfSwgW3dhaXRfLCBoYXNoLCBza2lwXSk7XG4gIC8qIGVzbGludC1lbmFibGUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG5cbiAgcmV0dXJuIFt7XG4gICAgZGF0YTogc3RhdGUucmVjZWlwdCxcbiAgICBlcnJvcjogc3RhdGUuZXJyb3IsXG4gICAgbG9hZGluZzogc3RhdGUubG9hZGluZ1xuICB9LCB3YWl0XTtcbn07XG5cbnZhciBDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG52YXIgUHJvdmlkZXIgPSBfcmVmID0+IHtcbiAgdmFyIF9zdGF0ZSRkYXRhMiwgX3N0YXRlJGRhdGEyJGNoYWluLCBfc3RhdGUkZGF0YTQsIF9zdGF0ZSRkYXRhNCRjaGFpbiwgX3N0YXRlJGRhdGE2LCBfc3RhdGUkZGF0YTYkY2hhaW47XG5cbiAgdmFyIHtcbiAgICBhdXRvQ29ubmVjdCA9IGZhbHNlLFxuICAgIGNoaWxkcmVuLFxuICAgIGNvbm5lY3RvcnM6IGNvbm5lY3RvcnNfID0gW25ldyBJbmplY3RlZENvbm5lY3RvcigpXSxcbiAgICBjb25uZWN0b3JTdG9yYWdlS2V5ID0gJ3dhZ21pLndhbGxldCcsXG4gICAgcHJvdmlkZXI6IHByb3ZpZGVyXyA9IGdldERlZmF1bHRQcm92aWRlcigpLFxuICAgIHdlYlNvY2tldFByb3ZpZGVyOiB3ZWJTb2NrZXRQcm92aWRlcl9cbiAgfSA9IF9yZWY7XG4gIHZhciBbbGFzdFVzZWRDb25uZWN0b3IsIHNldExhc3RVc2VkQ29ubmVjdG9yXSA9IHVzZUxvY2FsU3RvcmFnZShjb25uZWN0b3JTdG9yYWdlS2V5KTtcbiAgdmFyIFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoe1xuICAgIGNhY2hlQnVzdGVyOiAxLFxuICAgIGNvbm5lY3Rpbmc6IGF1dG9Db25uZWN0XG4gIH0pO1xuICB2YXIgY29ubmVjdG9ycyA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfc3RhdGUkZGF0YSwgX3N0YXRlJGRhdGEkY2hhaW47XG5cbiAgICBpZiAodHlwZW9mIGNvbm5lY3RvcnNfICE9PSAnZnVuY3Rpb24nKSByZXR1cm4gY29ubmVjdG9yc187XG4gICAgcmV0dXJuIGNvbm5lY3RvcnNfKHtcbiAgICAgIGNoYWluSWQ6IChfc3RhdGUkZGF0YSA9IHN0YXRlLmRhdGEpID09PSBudWxsIHx8IF9zdGF0ZSRkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3N0YXRlJGRhdGEkY2hhaW4gPSBfc3RhdGUkZGF0YS5jaGFpbikgPT09IG51bGwgfHwgX3N0YXRlJGRhdGEkY2hhaW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9zdGF0ZSRkYXRhJGNoYWluLmlkXG4gICAgfSk7XG4gIH0sIFtjb25uZWN0b3JzXywgKF9zdGF0ZSRkYXRhMiA9IHN0YXRlLmRhdGEpID09PSBudWxsIHx8IF9zdGF0ZSRkYXRhMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9zdGF0ZSRkYXRhMiRjaGFpbiA9IF9zdGF0ZSRkYXRhMi5jaGFpbikgPT09IG51bGwgfHwgX3N0YXRlJGRhdGEyJGNoYWluID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfc3RhdGUkZGF0YTIkY2hhaW4uaWRdKTtcbiAgdmFyIHByb3ZpZGVyID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgdmFyIF9zdGF0ZSRkYXRhMywgX3N0YXRlJGRhdGEzJGNoYWluO1xuXG4gICAgaWYgKHR5cGVvZiBwcm92aWRlcl8gIT09ICdmdW5jdGlvbicpIHJldHVybiBwcm92aWRlcl87XG4gICAgcmV0dXJuIHByb3ZpZGVyXyh7XG4gICAgICBjaGFpbklkOiAoX3N0YXRlJGRhdGEzID0gc3RhdGUuZGF0YSkgPT09IG51bGwgfHwgX3N0YXRlJGRhdGEzID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3N0YXRlJGRhdGEzJGNoYWluID0gX3N0YXRlJGRhdGEzLmNoYWluKSA9PT0gbnVsbCB8fCBfc3RhdGUkZGF0YTMkY2hhaW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9zdGF0ZSRkYXRhMyRjaGFpbi5pZCxcbiAgICAgIGNvbm5lY3Rvcjogc3RhdGUuY29ubmVjdG9yXG4gICAgfSk7XG4gIH0sIFtwcm92aWRlcl8sIChfc3RhdGUkZGF0YTQgPSBzdGF0ZS5kYXRhKSA9PT0gbnVsbCB8fCBfc3RhdGUkZGF0YTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfc3RhdGUkZGF0YTQkY2hhaW4gPSBfc3RhdGUkZGF0YTQuY2hhaW4pID09PSBudWxsIHx8IF9zdGF0ZSRkYXRhNCRjaGFpbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3N0YXRlJGRhdGE0JGNoYWluLmlkLCBzdGF0ZS5jb25uZWN0b3JdKTtcbiAgdmFyIHdlYlNvY2tldFByb3ZpZGVyID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgdmFyIF9zdGF0ZSRkYXRhNSwgX3N0YXRlJGRhdGE1JGNoYWluO1xuXG4gICAgaWYgKCF3ZWJTb2NrZXRQcm92aWRlcl8pIHJldHVybiB1bmRlZmluZWQ7XG4gICAgaWYgKHR5cGVvZiB3ZWJTb2NrZXRQcm92aWRlcl8gIT09ICdmdW5jdGlvbicpIHJldHVybiB3ZWJTb2NrZXRQcm92aWRlcl87XG4gICAgcmV0dXJuIHdlYlNvY2tldFByb3ZpZGVyXyh7XG4gICAgICBjaGFpbklkOiAoX3N0YXRlJGRhdGE1ID0gc3RhdGUuZGF0YSkgPT09IG51bGwgfHwgX3N0YXRlJGRhdGE1ID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3N0YXRlJGRhdGE1JGNoYWluID0gX3N0YXRlJGRhdGE1LmNoYWluKSA9PT0gbnVsbCB8fCBfc3RhdGUkZGF0YTUkY2hhaW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9zdGF0ZSRkYXRhNSRjaGFpbi5pZCxcbiAgICAgIGNvbm5lY3Rvcjogc3RhdGUuY29ubmVjdG9yXG4gICAgfSk7XG4gIH0sIFt3ZWJTb2NrZXRQcm92aWRlcl8sIChfc3RhdGUkZGF0YTYgPSBzdGF0ZS5kYXRhKSA9PT0gbnVsbCB8fCBfc3RhdGUkZGF0YTYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfc3RhdGUkZGF0YTYkY2hhaW4gPSBfc3RhdGUkZGF0YTYuY2hhaW4pID09PSBudWxsIHx8IF9zdGF0ZSRkYXRhNiRjaGFpbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3N0YXRlJGRhdGE2JGNoYWluLmlkLCBzdGF0ZS5jb25uZWN0b3JdKTsgLy8gQXR0ZW1wdCB0byBjb25uZWN0IG9uIG1vdW50XG5cbiAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWF1dG9Db25uZWN0KSByZXR1cm47XG5cbiAgICBfYXN5bmNUb0dlbmVyYXRvcihmdW5jdGlvbiogKCkge1xuICAgICAgc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICAgIGNvbm5lY3Rpbmc6IHRydWVcbiAgICAgIH0pKTtcbiAgICAgIHZhciBzb3J0ZWQgPSBsYXN0VXNlZENvbm5lY3RvciA/IFsuLi5jb25uZWN0b3JzXS5zb3J0KHggPT4geC5uYW1lID09PSBsYXN0VXNlZENvbm5lY3RvciA/IC0xIDogMSkgOiBjb25uZWN0b3JzO1xuXG4gICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiogX2xvb3AoY29ubmVjdG9yKSB7XG4gICAgICAgIGlmICghY29ubmVjdG9yLnJlYWR5IHx8ICFjb25uZWN0b3IuaXNBdXRob3JpemVkKSByZXR1cm4gXCJjb250aW51ZVwiO1xuICAgICAgICB2YXIgaXNBdXRob3JpemVkID0geWllbGQgY29ubmVjdG9yLmlzQXV0aG9yaXplZCgpO1xuICAgICAgICBpZiAoIWlzQXV0aG9yaXplZCkgcmV0dXJuIFwiY29udGludWVcIjtcbiAgICAgICAgdmFyIGRhdGEgPSB5aWVsZCBjb25uZWN0b3IuY29ubmVjdCgpO1xuICAgICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgICBjb25uZWN0b3IsXG4gICAgICAgICAgZGF0YVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBcImJyZWFrXCI7XG4gICAgICB9O1xuXG4gICAgICBmb3IgKHZhciBjb25uZWN0b3Igb2Ygc29ydGVkKSB7XG4gICAgICAgIHZhciBfcmV0ID0geWllbGQqIF9sb29wKGNvbm5lY3Rvcik7XG5cbiAgICAgICAgaWYgKF9yZXQgPT09IFwiY29udGludWVcIikgY29udGludWU7XG4gICAgICAgIGlmIChfcmV0ID09PSBcImJyZWFrXCIpIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh4ID0+IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB4KSwge30sIHtcbiAgICAgICAgY29ubmVjdGluZzogZmFsc2VcbiAgICAgIH0pKTtcbiAgICB9KSgpO1xuICB9LCBbXSk7XG4gIC8qIGVzbGludC1lbmFibGUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG4gIC8vIE1ha2Ugc3VyZSBjb25uZWN0b3JzIGNsb3NlXG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaWYgKCFzdGF0ZS5jb25uZWN0b3IpIHJldHVybjtcbiAgICAgIHN0YXRlLmNvbm5lY3Rvci5kaXNjb25uZWN0KCk7XG4gICAgfTtcbiAgfSwgW3N0YXRlLmNvbm5lY3Rvcl0pOyAvLyBXYXRjaCBjb25uZWN0b3IgZm9yIGV2ZW50c1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFzdGF0ZS5jb25uZWN0b3IpIHJldHVybjtcblxuICAgIHZhciBvbkNoYW5nZSA9IGRhdGEgPT4gc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICBjYWNoZUJ1c3RlcjogeC5jYWNoZUJ1c3RlciArIDEsXG4gICAgICBkYXRhOiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeC5kYXRhKSwgZGF0YSlcbiAgICB9KSk7XG5cbiAgICB2YXIgb25EaXNjb25uZWN0ID0gKCkgPT4gc2V0U3RhdGUoe1xuICAgICAgY2FjaGVCdXN0ZXI6IDFcbiAgICB9KTtcblxuICAgIHZhciBvbkVycm9yID0gZXJyb3IgPT4gc2V0U3RhdGUoeCA9PiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgeCksIHt9LCB7XG4gICAgICBlcnJvclxuICAgIH0pKTtcblxuICAgIHN0YXRlLmNvbm5lY3Rvci5vbignY2hhbmdlJywgb25DaGFuZ2UpO1xuICAgIHN0YXRlLmNvbm5lY3Rvci5vbignZGlzY29ubmVjdCcsIG9uRGlzY29ubmVjdCk7XG4gICAgc3RhdGUuY29ubmVjdG9yLm9uKCdlcnJvcicsIG9uRXJyb3IpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoIXN0YXRlLmNvbm5lY3RvcikgcmV0dXJuO1xuICAgICAgc3RhdGUuY29ubmVjdG9yLm9mZignY2hhbmdlJywgb25DaGFuZ2UpO1xuICAgICAgc3RhdGUuY29ubmVjdG9yLm9mZignZGlzY29ubmVjdCcsIG9uRGlzY29ubmVjdCk7XG4gICAgICBzdGF0ZS5jb25uZWN0b3Iub2ZmKCdlcnJvcicsIG9uRXJyb3IpO1xuICAgIH07XG4gIH0sIFtzdGF0ZS5jb25uZWN0b3JdKTtcbiAgdmFyIHZhbHVlID0ge1xuICAgIHN0YXRlOiB7XG4gICAgICBjYWNoZUJ1c3Rlcjogc3RhdGUuY2FjaGVCdXN0ZXIsXG4gICAgICBjb25uZWN0aW5nOiBzdGF0ZS5jb25uZWN0aW5nLFxuICAgICAgY29ubmVjdG9ycyxcbiAgICAgIGNvbm5lY3Rvcjogc3RhdGUuY29ubmVjdG9yLFxuICAgICAgZGF0YTogc3RhdGUuZGF0YSxcbiAgICAgIHByb3ZpZGVyLFxuICAgICAgd2ViU29ja2V0UHJvdmlkZXJcbiAgICB9LFxuICAgIHNldFN0YXRlLFxuICAgIHNldExhc3RVc2VkQ29ubmVjdG9yXG4gIH07XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWVcbiAgfSwgY2hpbGRyZW4pO1xufTtcbnZhciB1c2VDb250ZXh0ID0gKCkgPT4ge1xuICB2YXIgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29udGV4dCk7XG4gIGlmICghY29udGV4dCkgdGhyb3cgRXJyb3IoJ011c3QgYmUgdXNlZCB3aXRoaW4gUHJvdmlkZXInKTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG5leHBvcnQgeyBDb250ZXh0LCBQcm92aWRlciwgdXNlQWNjb3VudCwgdXNlQmFsYW5jZSwgdXNlQmxvY2tOdW1iZXIsIHVzZUNvbm5lY3QsIHVzZUNvbnRleHQsIHVzZUNvbnRyYWN0LCB1c2VDb250cmFjdEV2ZW50LCB1c2VDb250cmFjdFJlYWQsIHVzZUNvbnRyYWN0V3JpdGUsIHVzZUVuc0F2YXRhciwgdXNlRW5zTG9va3VwLCB1c2VFbnNSZXNvbHZlciwgdXNlRmVlRGF0YSwgdXNlTmV0d29yaywgdXNlUHJvdmlkZXIsIHVzZVNpZ25NZXNzYWdlLCB1c2VTaWduZXIsIHVzZVRva2VuLCB1c2VUcmFuc2FjdGlvbiwgdXNlV2FpdEZvclRyYW5zYWN0aW9uLCB1c2VXZWJTb2NrZXRQcm92aWRlciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/wagmi/dist/wagmi.esm.js\n");

/***/ })

});